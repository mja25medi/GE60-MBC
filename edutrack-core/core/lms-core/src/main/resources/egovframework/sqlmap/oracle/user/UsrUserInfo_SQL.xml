<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.edutrack.modules.user.info.service.impl.UsrUserInfoMapper">	
	
	<sql id="selectQuery">
		<![CDATA[
		SELECT A.USER_NO as userNo
		     , A.USER_NM as userNm
             , A.USER_NM_GANA as userNmGana
             , A.USER_NM_ENG as userNmEng
		     , NVL(A.PHOTO_FILE_SN,0) AS photoFileSn
		     ,A.BIRTH as "ECL_DECRYPT (BIRTH)"
             , A.SEX_CD AS sexCd
              ,A.DUP_INFO AS dupInfo
              ,A.HOME_POST_NO AS homePostNo
              ,A.HOME_ADDR_1 AS homeAddr1
              ,A.HOME_ADDR_2 AS homeAddr2
              ,A.HOME_PHONENO as homePhoneno
              ,A.ETC_PHONENO as etcPhoneno
              ,A.MOBILE_NO as mobileNo
              ,A.EMAIL as email
		     , A.ORG_CD as orgCd
		     , ( SELECT ORG_NM
		           FROM TB_ORG_ORG_INFO
		          WHERE ORG_CD = A.ORG_CD ) AS orgNm
		     , A.COMP_NM as compNm
		     , A.DEPT_CD as deptCd
		     , A.DEPT_NM as deptNm
		     , A.AREA_CD as areaCd
		     , ( SELECT CODE_NM FROM TB_ORG_CODE WHERE ORG_CD = A.ORG_CD AND CODE_CD = A.AREA_CD ) AS areaNm
		     , A.COMP_PHONENO as compPhoneno
		     , A.COMP_FAX_NO as compFaxNo
		     , A.COMP_POST_NO as compPost
		     , A.COMP_ADDR_1 as compAddr1
		     , A.COMP_ADDR_2 as compAddr2
		     , A.EMAIL_RECV as emailRecv
		     , A.SMS_RECV as smsRecv
		     , A.MSG_RECV as msgRecv
		     , A.INTEREST_FIELD as interestField
		     , A.INTEREST_FIELD_CD as InterestFieldCd
		     , A.DISABLILITY_YN as disablilityYn
		     , A.USER_DIV_CD as userDivCd
		     , ( SELECT CODE_NM FROM TB_ORG_CODE WHERE ORG_CD = A.ORG_CD AND CODE_CD = A.USER_DIV_CD ) AS userDivNm
		     , A.JOB_CD as jobCd
		     , ( SELECT CODE_NM FROM TB_ORG_CODE WHERE ORG_CD = A.ORG_CD AND CODE_CD = A.JOB_CD) as jobNm
		     , B.USER_ID as userId
		     , B.USER_PASS as userPass
		     , B.ADMIN_LOGIN_ACPT_DIV_CD as adminLoginAcptDivCd
		     , B.GPKI_INFO as gpkiInfo
		     , B.LOGIN_FAIL_DTTM as loginFailDttm
		     , B.LOGIN_FAIL_CNT as loginFailCnt
		     , B.LAST_LOGIN_DTTM as lastLoginDttm
		     , B.LOGIN_CNT as loginCnt
		     , B.APLC_DTTM as aplcDttm
		     , B.APRV_DTTM as aprvDttm
		     , B.SECEDE_DTTM as secedeDttm
		     , B.USER_STS as userSts
		     , B.REG_NO as regNo
		     , B.REG_DTTM as regDttm
		     , B.MOD_NO as modNo
		     , B.MOD_DTTM as modDttm
		     , B.SNS_DIV as snsDiv
		     , B.SNS_KEY as snsKey
          FROM TB_USR_USER_INFO A, TB_USR_LOGIN B
         WHERE A.USER_NO = B.USER_NO
		]]>
	</sql>
	<sql id="selectCountQuery">
		<![CDATA[
		SELECT COUNT(*)
          FROM TB_USR_USER_INFO A, TB_USR_LOGIN B
         WHERE A.USER_NO = B.USER_NO
		]]>
	</sql>
	<sql id="whereQuery">
		<if test='searchAuthGrp == "ADMIN"'>
		   AND EXISTS ( SELECT USER_NO FROM TB_USR_USER_AUTH_GRP
		                 WHERE USER_NO = A.USER_NO
		                   AND MENU_TYPE = 'ADMIN'
		                   AND AUTH_GRP_CD != 'ORGMNG' )
		</if>
		<if test = 'searchAuthGrp !=  "ADMIN"'>
          AND A.ORG_CD IS NOT NULL
			<if test = '(searchAuthGrp !=  null and  searchAuthGrp !=  "") and searchAuthGrp != "ALL"'>
				<if test = 'userSts !=  null and  userSts !=  ""'>
					<if test = 'userSts !=  "D"'>
	           		AND EXISTS ( SELECT USER_NO FROM TB_USR_USER_AUTH_GRP
			                 WHERE AUTH_GRP_CD = #{searchAuthGrp}
			                   AND USER_NO = A.USER_NO )
					</if>
				</if>
				<if test = 'userSts ==  null or  userSts ==  ""'>
	           		AND EXISTS ( SELECT USER_NO FROM TB_USR_USER_AUTH_GRP
			                 WHERE AUTH_GRP_CD = #{searchAuthGrp}
			                   AND USER_NO = A.USER_NO )
				</if>
			</if>
		</if>
		<if test = 'orgCd != null and orgCd != ""'>
		   AND A.ORG_CD = #{orgCd}
		</if>
		<if test = 'searchValue != null and searchValue != ""'>
		   AND DECODE(#{searchKey}, 'userId', B.USER_ID, A.USER_NM) like '%'||#{searchValue}||'%'
		</if>
		<if test = 'userSts != null and userSts != ""'>
		   AND B.USER_STS  = #{userSts}
		</if>
		<if test = "deptCd != null and deptCd != ''">
			AND A.DEPT_CD = #{deptCd}
		</if>
	</sql>
	<sql id="orderbyQuery">
		<if test = 'sortKey != null and sortKey != ""'>
			<if test = 'sortKey == "USER_ID_ASC"'>
			 ORDER BY B.USER_ID ASC
			</if>
			<if test = 'sortKey == "USER_ID_DESC"'>
			 ORDER BY B.USER_ID DESC
			</if>
			<if test = 'sortKey == "USER_NM_ASC"'>
			 ORDER BY A.USER_NM ASC
			</if>
			<if test = 'sortKey == "USER_NM_DESC"'>
			 ORDER BY A.USER_NM DESC
			</if>
			<if test = 'sortKey == "MOBILENO_ASC"'>
			 ORDER BY A.MOBILE_NO ASC
			</if>
			<if test = 'sortKey == "MOBILENO_DESC"'>
			 ORDER BY A.MOBILE_NO DESC
			</if>
			<if test = 'sortKey == "EMAIL_ASC"'>
			 ORDER BY A.EMAIL ASC
			</if>
			<if test = 'sortKey == "EMAIL_DESC"'>
			 ORDER BY A.EMAIL DESC
			</if>
			<if test = 'sortKey == "REGDATE_ASC"'>
			 ORDER BY B.REG_DTTM ASC
			</if>
			<if test = 'sortKey == "REGDATE_DESC"'>
			 ORDER BY B.REG_DTTM DESC
			</if>
			<if test = 'sortKey == "USER_STS_ASC"'>
			 ORDER BY B.USER_STS ASC
			</if>
			<if test = 'sortKey == "USER_STS_DESC"'>
			 ORDER BY B.USER_STS DESC
			</if>
		</if>
		<if test = 'sortKey == null or sortKey == ""'>
		   ORDER BY B.USER_ID ASC
		</if>
	</sql>		
	<sql id="listQuery">
		<include refid="selectQuery"/>
		<include refid="whereQuery"/>
		<include refid="orderbyQuery"/>
	</sql>
	
	<select id="list" parameterType="usrUserInfoVO" resultType="usrUserInfoVO">
		/*
			 SQL ID : list
			 설  명 : 사용자의 전체 목록
	 	*/
	 	<include refid="listQuery"/>
	</select>
	
	<select id="listPageing" parameterType="usrUserInfoVO" resultType="usrUserInfoVO">
		/*
			 SQL ID : listPageing
			 설  명 : 사용자의 페이징 목록
	 	*/
	 	<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pagePrefix"/>
	 	<include refid="listQuery"/>
	 	<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pageSubfix"/>
	</select>
	
	<select id="count" parameterType="usrUserInfoVO" resultType="Integer">
		/*
			 SQL ID : count
			 설  명 : 사용자의 전체 카운트
	 	*/
		<include refid="selectCountQuery"/>
		<include refid="whereQuery"/>
	</select>		

	<select id="select" parameterType="usrUserInfoVO" resultType="usrUserInfoVO">
		/*
			 SQL ID : select
			 설  명 : 사용자의 정보 조회
	 	*/
	 	<include refid="selectQuery"/>
           AND A.USER_NO = #{userNo}	 	
	</select>
	
	<select id="selectUserSns" parameterType="usrUserInfoVO" resultType="usrUserInfoVO">
		/*
			 SQL ID : select
			 설  명 : 사용자의 정보 조회
	 	*/
	 	<include refid="selectQuery"/>
 		AND A.ORG_CD = #{orgCd}
		AND B.SNS_KEY = #{snsKey}
		AND B.SNS_DIV = #{snsDiv}
	</select>
	
	<select id="selectForLogin" parameterType="usrUserInfoVO" resultType="usrUserInfoVO">
		/*
			 SQL ID : selectForLogin
			 설  명 : 사용자의 정보 조회
	 	*/
	 	<![CDATA[
		SELECT A.USER_NO as userNo
             , A.USER_NM as userNm
             , A.USER_NM_GANA as userNmGana
             , A.USER_NM_ENG as userNmEng
             , A.ORG_CD as orgCd
             , B.USER_ID as userId
		     , B.USER_PASS as userPass
		     , B.ADMIN_LOGIN_ACPT_DIV_CD as adminLoginAcptDivCd
		     , B.GPKI_INFO as gpkiInfo
		     , B.LOGIN_FAIL_DTTM as loginFailDttm
		     , B.LOGIN_FAIL_CNT as loginFailCnt
		     , B.LAST_LOGIN_DTTM as lastLoginDttm
		     , B.LOGIN_CNT as loginCnt
		     , B.USER_STS as userSts
		     , CASE WHEN SYSDATE >= TO_DATE(NVL(B.PSWD_CHG_REQ_DTTM,B.MOD_DTTM),'YYYYMMDDHH24MISS') 
		            THEN 'Y' ELSE 'N' END as pswdChgReqYn
		     , CASE WHEN B.LOGIN_FAIL_CNT >= FN_GET_CONFIG_VALUE('LOGIN','FAILCNT') THEN
		            CASE WHEN TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS') - NVL(B.LOGIN_FAIL_DTTM, '19900101000001') < fn_get_config_value('LOGIN','GAPTIME')
		                 THEN 'N' ELSE 'Y' END
		            ELSE 'Y' END AS loginUseYn
		     , CASE WHEN (SELECT ITGRT_MBR_USE_YN
                            FROM TB_ORG_ORG_INFO
                            WHERE ORG_CD = #{orgCd}) = 'Y' 
                    THEN 
                        CASE WHEN (SELECT ITGRT_MBR_USE_YN
                                    FROM TB_ORG_ORG_INFO
                                    WHERE ORG_CD = A.ORG_CD) = 'Y' 
                             THEN 'Y'
                             ELSE 'N'
                        END    
                    ELSE 'N'
               END AS itgrtMbrUseYn        
          FROM TB_USR_USER_INFO A, TB_USR_LOGIN B
         WHERE A.USER_NO = B.USER_NO
           AND B.USER_STS = 'U'
		]]>
		<if test = "snsKey == null or snsKey == ''">
        	AND B.USER_ID = #{userId}
			<if test = "orgCd != null and orgCd != ''">
        		AND A.ORG_CD = #{orgCd}	
			</if>
		</if>
		<if test = "snsKey != null and snsKey != ''">
			<if test = "itgrtMbrUseYn == null or itgrtMbrUseYn == ''">
				<if test = "orgCd != null and orgCd != ''">
	        		AND A.ORG_CD = #{orgCd}	
				</if>
			   	AND B.SNS_KEY = #{snsKey}
			   	AND B.SNS_DIV = #{snsDiv}
			</if>
			<if test = "itgrtMbrUseYn != null and itgrtMbrUseYn != ''">
			   	AND B.SNS_KEY = #{snsKey}
			   	AND B.SNS_DIV = #{snsDiv}
			   	AND A.ORG_CD IN (SELECT ORG_CD
                            		FROM TB_ORG_ORG_INFO
                            		WHERE ITGRT_MBR_USE_YN = 'Y' 
                            	 )
                AND ROWNUM = 1            		
			</if>
		</if>

	</select>	
	
	<select id="selectForLoginCheck" parameterType="usrUserInfoVO" resultType="usrUserInfoVO">
		/*
			 SQL ID : selectForLogin
			 설  명 : 사용자의 정보 조회
	 	*/
	 	<![CDATA[
		SELECT A.USER_NO as userNo
             , A.USER_NM as userNm
             , A.USER_NM_GANA as userNmGana
             , A.USER_NM_ENG as userNmEng
             , A.ORG_CD as orgCd
             , B.USER_ID as userId
		     , B.USER_PASS as userPass
		     , B.ADMIN_LOGIN_ACPT_DIV_CD as adminLoginAcptDivCd
		     , B.GPKI_INFO as gpkiInfo
		     , B.LOGIN_FAIL_DTTM as loginFailDttm
		     , B.LOGIN_FAIL_CNT as loginFailCnt
		     , B.LAST_LOGIN_DTTM as lastLoginDttm
		     , B.LOGIN_CNT as loginCnt
		     , B.USER_STS as userSts
		     , CASE WHEN SYSDATE >= TO_DATE(NVL(B.PSWD_CHG_REQ_DTTM,B.MOD_DTTM),'YYYYMMDDHH24MISS') 
		            THEN 'Y' ELSE 'N' END as pswdChgReqYn
		     , CASE WHEN B.LOGIN_FAIL_CNT >= FN_GET_CONFIG_VALUE('LOGIN','FAILCNT') THEN
		            CASE WHEN TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS') - NVL(B.LOGIN_FAIL_DTTM, '19900101000001') < fn_get_config_value('LOGIN','GAPTIME')
		                 THEN 'N' ELSE 'Y' END
		            ELSE 'Y' END AS loginUseYn
		     , CASE WHEN (SELECT ITGRT_MBR_USE_YN
                            FROM TB_ORG_ORG_INFO
                            WHERE ORG_CD = #{orgCd}) = 'Y' 
                    THEN 
                        CASE WHEN (SELECT ITGRT_MBR_USE_YN
                                    FROM TB_ORG_ORG_INFO
                                    WHERE ORG_CD = A.ORG_CD) = 'Y' 
                             THEN 'Y'
                             ELSE 'N'
                        END    
                    ELSE 'N'
               END AS itgrtMbrUseYn        
          FROM TB_USR_USER_INFO A, TB_USR_LOGIN B
         WHERE A.USER_NO = B.USER_NO
           AND B.USER_STS = 'U'
		]]>
		<if test = "snsKey == null or snsKey == ''">
        	AND B.USER_ID = #{userId}
			<if test = "orgCd != null and orgCd != ''">
        		AND A.ORG_CD = #{orgCd}	
			</if>
		</if>
		<if test = "snsKey != null and snsKey != ''">
			<if test = "itgrtMbrUseYn == null or itgrtMbrUseYn == ''">
				<if test = "orgCd != null and orgCd != ''">
	        		AND A.ORG_CD = #{orgCd}	
				</if>
			   	AND B.SNS_KEY = #{snsKey}
			   	AND B.SNS_DIV = #{snsDiv}
			</if>
			<if test = "itgrtMbrUseYn != null and itgrtMbrUseYn != ''">
			   	AND B.SNS_KEY = #{snsKey}
			   	AND B.SNS_DIV = #{snsDiv}
			   	AND A.ORG_CD IN (SELECT ORG_CD
                            		FROM TB_ORG_ORG_INFO
                            		WHERE ITGRT_MBR_USE_YN = 'Y' 
                            	 )
                AND ROWNUM = 1            		
			</if>
		</if>

	</select>	
	
	<select id="selectKey" resultType="String">
		/*
			 SQL ID : selectKey
			 설  명 : 사용자의 주키 생성
	 	*/
	 	SELECT 'USR'||LPAD(SQ_USR_USER_INFO.nextVal, 9, '0') FROM DUAL
	</select>
	
	<insert id="insert" parameterType="usrUserInfoVO" >
		/*
			 SQL ID : insert
			 설  명 : 사용자의 정보 등록
	 	*/
		INSERT INTO TB_USR_USER_INFO (
		       USER_NO
		     , USER_DIV_CD
		     , USER_NM
             , USER_NM_GANA
             , USER_NM_ENG
		     , PHOTO_FILE_SN
		     , BIRTH
		     , SEX_CD
		     , DUP_INFO
		     , HOME_POST_NO
		     , HOME_ADDR_1
		     , HOME_ADDR_2
		     , HOME_PHONENO
		     , ETC_PHONENO
		     , MOBILE_NO
		     , EMAIL
		     , ORG_CD
		     , COMP_NM
		     , DEPT_CD
		     , DEPT_NM
		     , AREA_CD
		     , COMP_PHONENO
		     , COMP_FAX_NO
		     , COMP_POST_NO
		     , COMP_ADDR_1
		     , COMP_ADDR_2
		     , EMAIL_RECV
		     , SMS_RECV
		     , MSG_RECV
		     , INTEREST_FIELD
		     , INTEREST_FIELD_CD
		     , DISABLILITY_YN
		     , USER_DIV_NM
		     , JOB_CD
		) VALUES (
		       #{userNo}
		     , #{userDivCd}
		     , #{userNm}
             , #{userNmGana}
             , #{userNmEng}
		     , #{photoFileSn}
		     , #{birth}
		     , #{sexCd}
		     , #{dupInfo}
		     , #{homePostNo}
		     , #{homeAddr1}
		     , #{homeAddr2}
		     , #{homePhoneno}
		     , #{etcPhoneno}
		     , #{mobileNo}
		     , #{email}
		     , #{orgCd}
		     , #{compNm}
		     , #{deptCd}
		     , #{deptNm}
		     , #{areaCd}
		     , #{compPhoneno}
		     , #{compFaxNo}
		     , #{compPostNo}
		     , #{compAddr1}
		     , #{compAddr2}
		     , #{emailRecv}
		     , #{smsRecv}
		     , #{msgRecv}
		     , #{interestField}
		     , #{interestFieldCd}
		     , #{disablilityYn}
		     , #{userDivNm}
		     , #{jobCd}
		)	 	
	</insert>
	
	<insert id="ssoinsert" parameterType="usrUserInfoVO" >
		/*
			 SQL ID : ssoinsert
			 설  명 : 사용자의 정보 등록
	 	*/
		INSERT INTO TB_USR_USER_INFO (
		       USER_NO
		     , USER_NM
		     , ORG_CD
		) VALUES (
		       #{userNo}
		     , #{userNo}
		     , #{orgCd}
		)	 	
	</insert>
	
	<update id="update" parameterType="usrUserInfoVO" >
		/*
			 SQL ID : update
			 설  명 : 사용자의 정보 수정
	 	*/
		UPDATE TB_USR_USER_INFO
		   SET USER_NM = #{userNm}
             , USER_NM_GANA = #{userNmGana}
             , USER_NM_ENG = #{userNmEng}
		     , USER_DIV_CD = #{userDivCd}
		     , PHOTO_FILE_SN = #{photoFileSn}
		     , BIRTH = #{birth}
		     , SEX_CD = #{sexCd}
		     , HOME_POST_NO = #{homePostNo}
		     , HOME_ADDR_1 = #{homeAddr1}
		     , HOME_ADDR_2 = #{homeAddr2}
		     , HOME_PHONENO = #{homePhoneno}
		     , ETC_PHONENO = #{etcPhoneno}
		     , MOBILE_NO = #{mobileNo}
		     , EMAIL = #{email}
		     , COMP_NM = #{compNm}
		     , DEPT_CD = #{deptCd}
		     , DEPT_NM = #{deptNm}
		     , AREA_CD = #{areaCd}
		     , COMP_PHONENO = #{compPhoneno}
		     , COMP_FAX_NO = #{compFaxNo}
		     , COMP_POST_NO = #{compPostNo}
		     , COMP_ADDR_1 = #{compAddr1}
		     , COMP_ADDR_2 = #{compAddr2}
		     , EMAIL_RECV = #{emailRecv}
		     , SMS_RECV = #{smsRecv}
		     , MSG_RECV = #{msgRecv}
		     , INTEREST_FIELD = #{interestField}
		     , INTEREST_FIELD_CD = #{interestFieldCd}
		     , DISABLILITY_YN = #{disablilityYn}
		     , USER_DIV_NM = #{userDivNm}
		     , JOB_CD = #{jobCd}
		 WHERE USER_NO = #{userNo}	 
	</update>	

	<delete id="delete" parameterType="usrUserInfoVO" >
		/*
			 SQL ID : delete
			 설  명 : 사용자의 정보 삭제
	 	*/
		DELETE FROM TB_USR_USER_INFO
		 WHERE USER_NO = #{userNo}
	</delete>
	
	<select id="selectSearchId" parameterType="usrUserInfoVO" resultType="usrUserInfoVO">
		/*
			 SQL ID : selectSearchId
			 설  명 : 사용자의 이름과 이메일로 사용자 정보 검색
	 	*/
        SELECT B.USER_ID as userId
             , A.USER_NO as userNo
             , A.USER_NM as userNm
             , A.USER_NM_GANA as userNmGana
             , A.USER_NM_ENG as userNmEng
             , A.EMAIL as email
          FROM TB_USR_USER_INFO A, TB_USR_LOGIN B
         WHERE A.USER_NO = B.USER_NO
           AND B.USER_STS = 'U'
		<if test = "userNm != null and userNm != ''">
		   AND A.USER_NM = #{userNm}
		</if>
		<if test = "userId != null and userId != ''">
           AND B.USER_ID = #{userId}
		</if>
		<if test = "orgCd != null and orgCd != ''">
		   AND A.ORG_CD = #{orgCd}
		</if>

           AND A.EMAIL = #{email}
           AND ROWNUM = 1
	</select>
	
	
	<select id="selectSearchPass" parameterType="usrUserInfoVO" resultType="usrUserInfoVO">
		/*
			 SQL ID : selectSearchPass
			 설  명 : 사용자의 패스워드를 조회한다.
	 	*/
        SELECT B.USER_PASS as userPass
          FROM TB_USR_USER_INFO A, TB_USR_LOGIN B
         WHERE A.USER_NO = B.USER_NO
           AND B.USER_STS = 'U'
		<if test = "userNo != null and userNo != ''">
		   AND A.USER_NO = #{userNo}
		</if>
		<if test = "orgCd != null and orgCd != ''">
		   AND A.ORG_CD = #{orgCd}
		</if>
           AND B.USER_PASS = #{userPass}
           AND ROWNUM = 1
	</select>
	
	<select id="selectDuplicate" parameterType="usrUserInfoVO" resultType="Integer">
		/*
			 SQL ID : selectDuplicate
			 설  명 : 중복키를 이용하여 사용자 중복 정보를 조회 한다.
	 	*/
		SELECT COUNT(USER_NO)
		  FROM TB_USR_USER_INFO
		 WHERE DUP_INFO = #{dupInfo}
	</select>		

	<update id="updateWithdrawal" parameterType="usrUserInfoVO" >
		/*
			 SQL ID : updateWithdrawal
			 설  명 : 회원탈퇴용 업데이트 사용자의 필드 정보만 초기화함.
	 	*/
		UPDATE TB_USR_USER_INFO
		   SET PHOTO_FILE_SN = null
		     , HOME_POST_NO = ''
		     , HOME_ADDR_1 = ''
		     , HOME_ADDR_2 = ''
		     , HOME_PHONENO = ''
		     , ETC_PHONENO = ''
		     , MOBILE_NO = ''
		     , EMAIL = ''
		     , EMAIL_RECV = ''
		     , SMS_RECV = ''
		     , MSG_RECV = ''
		     , BIRTH = ''
		     , USER_DIV_CD = ''
		     , SEX_CD = ''
		     , DEPT_CD = ''
		     , DEPT_NM = ''
		     , COMP_FAX_NO = ''
		     , INTEREST_FIELD = ''
		     , INTEREST_FIELD_CD = ''
		     , DISABLILITY_YN = ''
		     , USER_DIV_NM = ''
		     , JOB_CD = ''
		     , COMP_PHONENO = ''
		     , COMP_ADDR_1 = ''
		     , AREA_CD = ''
		 WHERE USER_NO = #{userNo}
	</update>	
</mapper>
