<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.edutrack.modules.course.course.service.impl.CourseMapper">	

	<select id="selectCrsCd" resultType="String">
		SELECT CONCAT('CRS', LPAD(nextval(SQ_CRS_CRS),7,'0')) AS UNIT_CD FROM DUAL
	</select>
	<sql id="selectColumnQuery">
				 A.ORG_CD 														
		       , A.CRS_CD 														
		       , A.CRS_NM 														
		       , A.CRS_CTGR_CD 												
		       , A.CRS_OPER_MTHD 												
		       , A.CRS_OPER_TYPE 												
		       , A.ENRL_CERT_MTHD 												
		       , A.PRSN_CERT_YN 												
		       , A.CPLT_HANDL_TYPE 											
		       , A.SCORE_HANDL_MTHD 											
		       , A.CERT_ISSUE_YN 												
		       , A.EDU_DIV_CD 													
		       , A.CRS_TYPE_CD 												
		       , A.CRS_LVL_CD 													
		       , A.EDU_TEAM 													
		       , A.STAY_YN 													
		       , A.EDU_TM 														
		       , A.OFLN_EDU_TM 														
		       , A.EDU_NOP 													
		       , A.STAY_DAYCNT 												
		       , A.EDU_TARGET 													
		       , A.EDU_PRICE 													
		       , A.EDU_MTHD 													
		       , A.EDU_PRPS 													
		       , A.CRS_DESC 													
		       , A.EDU_CREDIT 													
		       , A.USE_YN 														
		       , A.OPEN_YN 													
		       , A.PRGR_RATIO 													
		       , A.ATTD_RATIO 													
		       , A.EXAM_RATIO 													
		       , A.FORUM_RATIO 												
		       , A.ASMT_RATIO 													
		       , A.PRJT_RATIO 													
		       , A.JOIN_RATIO 													
		       , A.ETC_RATIO 													
		       , A.CPLT_SCORE 													
		       , A.REG_NO 														
		       , A.OFLN_EDU_PLACE 														
			    , (SELECT FN_GET_USER_NAME(A.REG_NO) ) AS REG_NM		
		       , A.REG_DTTM 													
		       , A.MOD_NO 														
			    , (SELECT FN_GET_USER_NAME(A.MOD_NO) ) AS MOD_NM		
		       , A.MOD_DTTM
		       , A.THUMB_FILE_SN 	
  		       , A.META_TAG 	
  		       , A.CRS_SVC_TYPE											
		       , B.CRS_CTGR_NM													
		       , B.CRS_CTGR_PATH												
		       , B.CRS_CTGR_PATH_NM	
		       , ( SELECT COUNT(*)												
		             FROM TB_CRS_CRE_CRS										
		            WHERE CRS_CD = A.CRS_CD) AS CRE_CRS_CNT
		        ,IFNULL(( SELECT CRE_CNT 										
		                 FROM TB_CRS_CRS_PLAN									
		                WHERE CRS_CD = A.CRS_CD								
		                  AND CRE_YEAR =#{creYear} ),0) AS CRE_CNT				
		       ,IFNULL(( SELECT YEAR_NOP_CNT 										
		                 FROM TB_CRS_CRS_PLAN									
		                WHERE CRS_CD = A.CRS_CD								
		                  AND CRE_YEAR =#{creYear} ),0) AS YEAR_NOP_CNT			
		       , IFNULL(FN_GET_NULL(A.NOP_LIMIT_YN),'N') AS NOP_LIMIT_YN 
	</sql>

	<sql id="selectCourseQuery">
		  SELECT 
		  <include refid="selectColumnQuery" />
		  FROM TB_CRS_CRS A, TB_CRS_CRS_CTGR B								
		  WHERE A.ORG_CD = B.ORG_CD											
		     AND A.CRS_CTGR_CD = B.CRS_CTGR_CD 
	</sql>		
		
	<select id="count" parameterType="courseVO" resultType="Integer">
		  SELECT 
		 	COUNT(*)
		  FROM TB_CRS_CRS A, TB_CRS_CRS_CTGR B								
		  WHERE A.ORG_CD = B.ORG_CD											
		     AND A.CRS_CTGR_CD = B.CRS_CTGR_CD 	    
		<if test = "crsCtgrCd != null and crsCtgrCd != ''">
			AND 
			<foreach collection="crsCtgrArr" item="item" separator="OR" open="(" close=")"  index="index">
				B.CRS_CTGR_PATH like CONCAT('%',#{item},'%')
			</foreach>
		</if>
		<if test = 'orgCd != null and orgCd != ""'>
			AND A.ORG_CD = IFNULL(FN_GET_NULL(#{orgCd}), A.ORG_CD)
		</if>
		<if test = 'crsOperMthd != null and crsOperMthd != ""'>
			AND A.CRS_OPER_MTHD = IFNULL(FN_GET_NULL(#{crsOperMthd}), A.CRS_OPER_MTHD)
		</if>
		<if test = 'crsOperType != null and crsOperType != ""'>
			AND A.CRS_OPER_TYPE = IFNULL(FN_GET_NULL(#{crsOperType}), A.CRS_OPER_TYPE)
		</if>
		<if test = 'useYn != null and useYn != ""'>
			AND A.USE_YN = #{useYn}	
		</if>
		<if test = 'crsNm != null and crsNm != ""'>
			AND A.CRS_NM like CONCAT('%',IFNULL(#{crsNm}, ''),'%')	
		</if>
		<if test = 'createdOnly != null and createdOnly == "Y"'>
		<![CDATA[
			AND ( SELECT COUNT(*)	
				  FROM TB_CRS_CRE_CRS	
				  WHERE CRS_CD = A.CRS_CD
				  		AND CRE_YEAR = #{creYear} ) > 0		
  		]]>
		</if>
	</select>
			
	<select id="list" parameterType="courseVO" resultType="courseVO">
	    <include refid="selectCourseQuery" />
	    
		<if test = "crsCtgrCd != null and crsCtgrCd != ''">
			AND 
			<foreach collection="crsCtgrArr" item="item" separator="OR" open="(" close=")"  index="index">
				B.CRS_CTGR_PATH like CONCAT('%', #{item}, '%') 
			</foreach>
		</if>
		<if test = "orgCd != null and orgCd != ''">
			AND A.ORG_CD = IFNULL(FN_GET_NULL(#{orgCd}), A.ORG_CD)
		</if>
		<if test = "crsOperMthd != null and crsOperMthd != ''">
			AND A.CRS_OPER_MTHD = IFNULL(FN_GET_NULL(#{crsOperMthd}), A.CRS_OPER_MTHD) 
		</if>
		<if test = "crsOperType != null and crsOperType != ''">
			AND A.CRS_OPER_TYPE = IFNULL(FN_GET_NULL(#{crsOperType}), A.CRS_OPER_TYPE) 
		</if>
		<if test = "useYn != null and useYn != ''">
			AND A.USE_YN = #{useYn}	
		</if>
		<if test = "crsNm != null and crsNm != ''">
			AND A.CRS_NM like CONCAT('%', IFNULL(#{crsNm}, ''), '%') 
		</if>
		<if test = 'createdOnly != null and createdOnly == "Y"'>
		<![CDATA[
			AND ( SELECT COUNT(*)	
				  FROM TB_CRS_CRE_CRS	
				  WHERE CRS_CD = A.CRS_CD
				  		AND CRE_YEAR = #{creYear} ) > 0		
		]]>
		</if>
		<choose>
			<when test = "sortKey != null and sortKey == 'CRS_CD_ASC'">
				 ORDER BY A.CRS_CD	ASC		
			</when>
			<when test = "sortKey != null and sortKey == 'CRS_CD_DESC'">
			 	ORDER BY A.CRS_CD	DESC	
			</when>
			<when test = "sortKey != null and sortKey == 'CRS_NM_ASC'">
			 	ORDER BY A.CRS_NM	ASC		
			</when>
			<when test = "sortKey != null and sortKey == 'CRS_NM_DESC'">
			 	ORDER BY A.CRS_NM	DESC		
			</when>
			<when test = "sortKey != null and sortKey == 'CRS_CTGR_NM_ASC'">
			 	ORDER BY B.CRS_CTGR_NM ASC
			</when>
			<when test = "sortKey != null and sortKey == 'CRS_CTGR_NM_DESC'">
				ORDER BY B.CRS_CTGR_NM DESC
			</when>
			<otherwise>
			   ORDER BY A.CRS_NM	
			</otherwise>
		</choose>
	</select>
	<select id="listPageing" parameterType="courseVO" resultType="courseVO">
		<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pagePrefix"/>
	    <include refid="selectCourseQuery" />
	    
	    <if test = "searchValue != null and searchValue != ''">
			<if test = "searchKey != null and searchKey == 'crsNm'">
			AND CRS_NM LIKE CONCAT('%', NVL(#{searchValue}, ''), '%')
			</if>
			<if test = "searchKey != null and searchKey == 'crsCd'">
			AND CRS_CD LIKE CONCAT('%', NVL(#{searchValue}, ''), '%')
			</if>
			<if test = "searchKey == null or searchKey == 'all'">
			   AND ( CRS_YEAR LIKE CONCAT('%', NVL(#{searchValue}, ''), '%')
				OR CRS_NM LIKE CONCAT('%', NVL(#{searchValue}, ''), '%')
				OR CRS_CD LIKE CONCAT('%', NVL(#{searchValue}, ''), '%'))			   
			</if>
		</if>
		<if test = "crsCtgrCd != null and crsCtgrCd != ''">
			AND 
			<foreach collection="crsCtgrArr" item="item" separator="OR" open="(" close=")"  index="index">
				<if test = "item != null and item != ''">
					B.CRS_CTGR_PATH like CONCAT('%', #{item}, '%')
				</if>
			</foreach>
		</if>
		<if test = "orgCd != null and orgCd != ''">
			AND A.ORG_CD = IFNULL(FN_GET_NULL(#{orgCd}), A.ORG_CD)
		</if>
		<if test = "crsOperMthd != null and crsOperMthd != ''">
			AND A.CRS_OPER_MTHD = IFNULL(FN_GET_NULL(#{crsOperMthd}), A.CRS_OPER_MTHD)
		</if>
		<if test = "crsOperType != null and crsOperType != ''">
			AND A.CRS_OPER_TYPE = IFNULL(FN_GET_NULL(#{crsOperType}), A.CRS_OPER_TYPE)
		</if>
		<if test = "useYn != null and useYn != ''">
			AND A.USE_YN = #{useYn}	
		</if>
		<if test = "crsNm != null and crsNm != ''">
			AND A.CRS_NM like CONCAT('%', IFNULL(#{crsNm}, ''), '%')
		</if>
		<if test = 'createdOnly != null and createdOnly == "Y"'>
		<![CDATA[
			AND ( SELECT COUNT(*)	
				  FROM TB_CRS_CRE_CRS	
				  WHERE CRS_CD = A.CRS_CD
				  		AND CRE_YEAR = #{creYear} ) > 0		
		]]>
		</if>
		<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pageRnumfix"/>
		<choose>
			<when test = "sortKey != null and sortKey == 'CRS_CD_ASC'">
				 ORDER BY CRS_CD ASC		
			</when>
			<when test = "sortKey != null and sortKey == 'CRS_CD_DESC'">
			 	ORDER BY CRS_CD	DESC	
			</when>
			<when test = "sortKey != null and sortKey == 'CRS_NM_ASC'">
			 	ORDER BY CRS_NM	ASC		
			</when>
			<when test = "sortKey != null and sortKey == 'CRS_NM_DESC'">
			 	ORDER BY CRS_NM	DESC		
			</when>
			<when test = "sortKey != null and sortKey == 'CRS_CTGR_NM_ASC'">
			 	ORDER BY CRS_CTGR_NM ASC
			</when>
			<when test = "sortKey != null and sortKey == 'CRS_CTGR_NM_DESC'">
				ORDER BY CRS_CTGR_NM DESC
			</when>
			<otherwise>
			   ORDER BY CRS_NM	
			</otherwise>
		</choose>	
		<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pageSubfix"/>
	</select>
	<select id="listForEnroll" parameterType="courseVO" resultType="courseVO">
	    <include refid="selectCourseQuery" />
	    
		<if test = "crsCtgrCd != null and crsCtgrCd != ''">
			AND B.CRS_CTGR_PATH LIKE CONCAT('%/', #{crsCtgrCd}, '%' )
		</if>
		<if test = "orgCd != null and orgCd != ''">
			AND A.ORG_CD = IFNULL(FN_GET_NULL(#{orgCd}), A.ORG_CD)
		</if>
		<![CDATA[
		AND  ( IFNULL(( SELECT CRE_CNT 							
                 FROM TB_CRS_CRS_PLAN 						
                WHERE CRS_CD = A.CRS_CD						
                  AND CRE_YEAR = #{creYear} ), 0) > 0			
        OR ( SELECT COUNT(*)								
                 FROM TB_CRS_CRE_CRS						
                WHERE CRS_CD = A.CRS_CD						
                  AND ( ENRL_END_DTTM >= DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')	
                        OR OFLN_END_DTTM >= DATE_FORMAT(NOW(), '%Y%m%d%H%i%s') ) ) > 0 )	                  
   		ORDER BY CRS_NM	
       ]]>
	</select>
	<select id="select" parameterType="courseVO" resultType="courseVO">
	    <include refid="selectCourseQuery" />
	    AND CRS_CD = #{crsCd}	
	</select>
    <insert id="insert" parameterType="courseVO">
	    INSERT INTO TB_CRS_CRS (						
	         CRS_CD 								
	       , ORG_CD 								
	       , CRS_NM 								
	       , CRS_CTGR_CD 							
	       , CRS_OPER_MTHD 						
	       , CRS_OPER_TYPE 						
	       , ENRL_CERT_MTHD 						
	       , PRSN_CERT_YN 							
	       , CPLT_HANDL_TYPE 						
	       , SCORE_HANDL_MTHD 						
	       , CERT_ISSUE_YN 		
	       , CRS_SVC_TYPE				
	       , EDU_DIV_CD 							
	       , CRS_TYPE_CD 							
	       , CRS_LVL_CD 							
	       , EDU_TEAM 								
	       , STAY_YN 								
	       , EDU_TM 								
	       , OFLN_EDU_TM 								
	       , EDU_NOP 								
	       , STAY_DAYCNT 							
	       , EDU_TARGET 							
	       , EDU_PRICE 							
	       , EDU_MTHD 								
	       , EDU_PRPS 								
	       , CRS_DESC 								
	       , EDU_CREDIT 							
	       , USE_YN 								
	       , OPEN_YN 								
	       , PRGR_RATIO 							
	       , ATTD_RATIO 							
	       , EXAM_RATIO 							
	       , FORUM_RATIO 							
	       , ASMT_RATIO 							
	       , PRJT_RATIO 							
	       , JOIN_RATIO 							
	       , ETC_RATIO 							
	       , CPLT_SCORE 							
	       , REG_NO 								
	       , REG_DTTM 								
	       , MOD_NO 								
	       , MOD_DTTM 								
	       , NOP_LIMIT_YN 						
	       , OFLN_EDU_PLACE
	       , THUMB_FILE_SN 		
	       , META_TAG		
	 ) VALUES (									
	         #{crsCd} 								
	       , #{orgCd} 								
	       , #{crsNm} 								
	       , #{crsCtgrCd} 							
	       , #{crsOperMthd} 							
	       , #{crsOperType} 							
	       , #{enrlCertMthd} 						
	       , #{prsnCertYn} 							
	       , #{cpltHandlType} 						
	       , #{scoreHandlMthd} 						
	       , #{certIssueYn} 
	       , #{crsSvcType}							
	       , #{eduDivCd} 							
	       , #{crsTypeCd} 							
	       , #{crsLvlCd} 							
	       , #{eduTeam} 								
	       , #{stayYn} 								
	       , #{eduTm} 								
	       , #{oflnEduTm} 								
	       , #{eduNop} 								
	       , #{stayDaycnt} 							
	       , #{eduTarget} 							
	       , IF(CAST(#{eduPrice} AS CHAR(100))='', 0 , IFNULL(#{eduPrice}, 0)) 							
	       , #{eduMthd} 								
	       , #{eduPrps} 								
	       , #{crsDesc} 								
	       , #{eduCredit} 							
	       , #{useYn} 								
	       , #{openYn} 								
	       , #{prgrRatio} 							
	       , #{attdRatio} 							
	       , #{examRatio} 							
	       , #{forumRatio} 							
	       , #{asmtRatio} 							
	       , #{prjtRatio}							
	       , #{joinRatio} 							
	       , #{etcRatio} 							
	       , #{cpltScore} 							
	       , #{regNo} 								
	       , DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')	
	       , #{modNo} 								
	       , DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
	       , #{nopLimitYn} 											
	       , #{oflnEduPlace} 
	       , #{thumbFileSn}											
	       , #{metaTag}											
	 ) 											  	
    </insert>
    <update id="update" parameterType="courseVO">
		  UPDATE TB_CRS_CRS 										
		     SET CRS_NM = #{crsNm} 									
		       , CRS_CTGR_CD = #{crsCtgrCd} 							
		       , CRS_OPER_MTHD = #{crsOperMthd} 						
		       , CRS_OPER_TYPE = #{crsOperType} 						
		       , ENRL_CERT_MTHD = #{enrlCertMthd} 					
		       , PRSN_CERT_YN = #{prsnCertYn} 						
		       , CPLT_HANDL_TYPE = #{cpltHandlType} 					
		       , SCORE_HANDL_MTHD = #{scoreHandlMthd} 	
		       , CRS_SVC_TYPE = #{crsSvcType}			
		       , CERT_ISSUE_YN = #{certIssueYn} 						
		       , EDU_DIV_CD = #{eduDivCd} 							
		       , CRS_TYPE_CD = #{crsTypeCd} 							
		       , CRS_LVL_CD = #{crsLvlCd} 							
		       , EDU_TEAM = #{eduTeam} 								
		       , STAY_YN = #{stayYn} 								
		       , EDU_TM = #{eduTm} 									
		       , OFLN_EDU_TM = #{oflnEduTm} 									
		       , EDU_NOP = #{eduNop}								
		       , STAY_DAYCNT = #{stayDaycnt} 						
		       , EDU_TARGET = #{eduTarget} 							
		       , EDU_PRICE =  IFNULL(#{eduPrice}, 0)			
		       , EDU_MTHD = #{eduMthd} 								
		       , EDU_PRPS = #{eduPrps} 								
		       , CRS_DESC = #{crsDesc} 								
		       , EDU_CREDIT = #{eduCredit} 							
		       , USE_YN = #{useYn} 									
		       , OPEN_YN = #{openYn} 								
		       , PRGR_RATIO = #{prgrRatio }							
		       , ATTD_RATIO = #{attdRatio} 							
		       , EXAM_RATIO = #{examRatio} 							
		       , FORUM_RATIO = #{forumRatio} 						
		       , ASMT_RATIO = #{asmtRatio} 							
		       , PRJT_RATIO = #{prjtRatio} 							
		       , JOIN_RATIO = #{joinRatio} 							
		       , ETC_RATIO = #{etcRatio} 							
		       , CPLT_SCORE = #{cpltScore} 							
		       , MOD_NO = #{modNo} 									
		       , MOD_DTTM = DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
		       , NOP_LIMIT_YN = #{nopLimitYn} 											
		       , OFLN_EDU_PLACE = #{oflnEduPlace}  		
		       , THUMB_FILE_SN 	= #{thumbFileSn}			
		       , META_TAG = #{metaTag}  				
		   WHERE CRS_CD = #{crsCd}														  	
    </update>

    <delete id="delete" parameterType="courseVO">
		 DELETE FROM TB_CRS_CRS				
		  WHERE CRS_CD = #{crsCd}															  	
    </delete>
	<select id="isDupulicateByCrsNm" parameterType="courseVO" resultType="courseVO">
		SELECT CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END AS DUP_YN		
		  FROM TB_CRS_CRS													
		 WHERE TRIM(REPLACE(CRS_NM,' ','')) = TRIM(REPLACE(#{crsNm},' ',''))
	</select>

	<select id="listForEnrollPagingCount" parameterType="courseVO" resultType="Integer">
		  SELECT 
		 	COUNT(*)
		  FROM TB_CRS_CRS A, TB_CRS_CRS_CTGR B								
		  WHERE A.ORG_CD = B.ORG_CD											
		     AND A.CRS_CTGR_CD = B.CRS_CTGR_CD 	    
		<if test = 'crsCtgrCd != null and crsCtgrCd != ""'>
			AND B.CRS_CTGR_PATH LIKE CONCAT('%/',#{crsCtgrCd},'%')	
		</if>
		<if test = 'orgCd != null and orgCd != ""'>
			AND A.ORG_CD = IFNULL(FN_GET_NULL(#{orgCd}), A.ORG_CD)
		</if>
		<![CDATA[
		AND  ( IFNULL(( SELECT CRE_CNT 							
                 FROM TB_CRS_CRS_PLAN 						
                WHERE CRS_CD = A.CRS_CD						
                  AND CRE_YEAR = #{creYear} ), 0) > 0			
        OR ( SELECT COUNT(*)								
                 FROM TB_CRS_CRE_CRS						
                WHERE CRS_CD = A.CRS_CD						
                  AND ( ENRL_END_DTTM >= DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')	
                        OR OFLN_END_DTTM >= DATE_FORMAT(NOW(), '%Y%m%d%H%i%s') ) ) > 0 )	
       ]]>
	</select>
	
	<select id="listForEnrollPaging" parameterType="courseVO" resultType="courseVO">
		<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pagePrefix"/>
	    <include refid="selectCourseQuery" />
	    
		<if test = "crsCtgrCd != null and crsCtgrCd != ''">
			AND B.CRS_CTGR_PATH LIKE CONCAT('%/', #{crsCtgrCd}, '%')
		</if>
		<if test = "orgCd != null and orgCd != ''">
			AND A.ORG_CD = IFNULL(FN_GET_NULL(#{orgCd}), A.ORG_CD)
		</if>
		<![CDATA[
		    AND  ( IFNULL(( SELECT CRE_CNT						
		                 FROM TB_CRS_CRS_PLAN 						
		                WHERE CRS_CD = A.CRS_CD						
		                  AND CRE_YEAR = #{creYear} ), 0) > 0			
		          OR ( SELECT COUNT(*)								
		                 FROM TB_CRS_CRE_CRS						
		                WHERE CRS_CD = A.CRS_CD						
		                  AND ( ENRL_END_DTTM like CONCAT(#{creYear}, '%')	
		                        OR OFLN_END_DTTM like CONCAT(#{creYear}, '%')) ) > 0 )			                  
		]]>
		<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pageRnumfix"/>
		ORDER BY CRS_NM
		<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pageSubfix"/>
	</select>

	<select id="listSubInfo" parameterType="courseVO" resultType="courseVO">
		  SELECT A.ORG_CD 														
		       , A.CRS_CD 														
		       , A.CRS_NM 														
		       , A.CRS_CTGR_CD 												
		       , A.CRS_OPER_MTHD 												
		       , A.CRS_OPER_TYPE 												
		       , A.USE_YN 														
		       , A.REG_NO 														
			    , (SELECT FN_GET_USER_NAME(A.REG_NO) ) AS REG_NM		
		       , A.REG_DTTM 													
		       , A.MOD_NO 														
			    , (SELECT FN_GET_USER_NAME(A.MOD_NO) ) AS MOD_NM		
		       , A.MOD_DTTM 													
		       , B.CRS_CTGR_NM													
		       , B.CRS_CTGR_PATH												
		       , B.CRS_CTGR_PATH_NM											
		       , IFNULL(FN_GET_NULL(A.NOP_LIMIT_YN),'N') AS NOP_LIMIT_YN
		    FROM TB_CRS_CRS A, TB_CRS_CRS_CTGR B, TB_CRS_CRS_ONLN_SBJ C								
		   WHERE A.ORG_CD = B.ORG_CD											
		     AND A.CRS_CTGR_CD = B.CRS_CTGR_CD									
		     AND A.CRS_CD = C.CRS_CD									
		     AND A.ORG_CD = IFNULL(FN_GET_NULL(#{orgCd}), A.ORG_CD)							
		     AND C.SBJ_CD = #{sbjCd}								
		  ORDER BY A.CRS_NM
	</select>


	<select id="listSubInfoOffline" parameterType="courseVO" resultType="courseVO">
		  SELECT A.ORG_CD 														
		       , A.CRS_CD 														
		       , A.CRS_NM 														
		       , A.CRS_CTGR_CD 												
		       , A.CRS_OPER_MTHD 												
		       , A.CRS_OPER_TYPE 												
		       , A.CRS_SVC_TYPE 												
		       , A.USE_YN 														
		       , A.REG_NO 														
			    , (SELECT FN_GET_USER_NAME(A.REG_NO) ) AS REG_NM		
		       , A.REG_DTTM 													
		       , A.MOD_NO 														
		       , A.OFLN_EDU_PLACE 														
			    , (SELECT FN_GET_USER_NAME(A.MOD_NO) ) AS MOD_NM		
		       , A.MOD_DTTM 													
		       , B.CRS_CTGR_NM													
		       , B.CRS_CTGR_PATH												
		       , B.CRS_CTGR_PATH_NM											
		       , IFNULL(FN_GET_NULL(A.NOP_LIMIT_YN),'N') AS NOP_LIMIT_YN
		    FROM TB_CRS_CRS A, TB_CRS_CRS_CTGR B, TB_CRS_CRS_OFLN_SBJ C								
		   WHERE A.ORG_CD = B.ORG_CD											
		     AND A.CRS_CTGR_CD = B.CRS_CTGR_CD									
		     AND A.CRS_CD = C.CRS_CD									
		     AND A.ORG_CD = IFNULL(FN_GET_NULL(#{orgCd}), A.ORG_CD)								
		     AND C.SBJ_CD = #{sbjCd}								
		  ORDER BY A.CRS_NM
	</select>
	
	<select id="listCourse" parameterType="CourseVO" resultType="CourseVO">
		  SELECT 
		  <include refid="selectColumnQuery" />
		  ,( SELECT  max(CRS_CRE_CD) 		
		             FROM TB_CRS_CRE_CRS										
		            WHERE CRS_CD = A.CRS_CD) AS CRS_CRE_CD
		  FROM TB_CRS_CRS A, TB_CRS_CRS_CTGR B							
		  WHERE A.ORG_CD = B.ORG_CD		
		     AND A.CRS_CTGR_CD = B.CRS_CTGR_CD  
		     AND A.CRS_SVC_TYPE = 'R'
		     <if test = "crsCtgrCd != null and crsCtgrCd != ''">
			AND B.CRS_CTGR_PATH LIKE CONCAT('%/', #{crsCtgrCd}, '%' )
		</if>
		<if test = "orgCd != null and orgCd != ''">
			AND A.ORG_CD = IFNULL(FN_GET_NULL(#{orgCd}), A.ORG_CD)
		</if>
	</select>
	
		<select id="fileListCourse" parameterType="CourseVO" resultType="SysFileVO">
		SELECT B.FILE_SN
		     , B.FILE_NM
		     , B.FILE_SAVE_NM
		     , B.FILE_PATH
		     , B.FILE_EXT
		     , B.FILE_SIZE
		     , B.FILE_TYPE
		     , B.ORG_CD
		     , B.REPO_CD
		     , B.REPO_PATH
		     , B.MIME_TYPE
		FROM TB_CRS_CRS A, TB_SYS_FILE B 
		WHERE A.THUMB_FILE_SN = B.FILE_SN 
		AND A.THUMB_FILE_SN = #{thumbFileSn}
	</select>
	
	<select id="listStudentPaymentCourseByUserNo" parameterType="String" resultType="courseVO">
		<include refid="selectCourseQuery"/>
		AND A.CRS_CD IN (
							SELECT C.CRS_CD 
							FROM tb_std_std A, tb_std_pay_info B, tb_crs_cre_crs C
							WHERE A.PAYM_NO = B.PAYM_NO
							AND A.USER_NO = B.USER_NO
							AND A.CRS_CRE_CD = C.CRS_CRE_CD 
							AND B.USER_NO = #{userNo}
						)
	</select>
	
	<sql id="selectUserCourseQuery">
	 	<![CDATA[
	 	 SELECT B.CRS_CRE_CD
	 	 	 , B.CRS_CRE_NM
	 	 	 , B.CRE_TERM
	 	 	 , A.ENRL_APLC_DTTM
	 	 	 , B.ENRL_START_DTTM
	 	 	 , B.ENRL_END_DTTM
	 	 	 , A.ENRL_STS
	 	 	 , (SELECT FN_GET_CODE_NAME('ENRL_STS',A.ENRL_STS)) AS ENRL_STS_NM		
		 FROM tb_std_std A, tb_crs_cre_crs B, tb_crs_crs C 							
		 WHERE A.CRS_CRE_CD = B.CRS_CRE_CD
		 AND B.CRS_CD = C.CRS_CD
		 AND A.USER_NO = #{userNo}
		 AND A.ENRL_STS IN ('S','C','F','E')
		 ]]>
	</sql>
	
	<sql id="userCourseCountQuery">
		<![CDATA[
		SELECT COUNT(*)
          FROM tb_std_std
         WHERE USER_NO = #{userNo}
		]]>
	</sql>
	<select id="countCourse" parameterType="courseVO" resultType="Integer">
		<include refid="userCourseCountQuery"/>
	</select>
	
	<select id="listUserStdCourse" parameterType="courseVO" resultType="courseVO">
	 	<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pagePrefix"/>
	 	<include refid="selectUserCourseQuery"/>
	 	<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pageRnumfix"/>
	 	<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pageSubfix"/>
	</select>
	
</mapper>		