<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.edutrack.modules.etc.event.service.impl.EtcEventMapper">	

	
	<sql id="selectQuery">
		SELECT EVENT_SN as eventSn
		     , ORG_CD as orgCd
		     , EVENT_NM as eventNm
		     , EVENT_URL as eventUrl
		     , EVENT_POS_CD as eventPosCd
		     , EVENT_ODR as eventOdr
		     , EVENT_TRGT as eventTrgt
		     , EVENT_IMG_SN as eventImgSn
		     , EVENT_DESC as eventDesc
		     , OPEN_YN as openYn
		     , REG_NO as regNo
		     , ( SELECT FN_GET_USER_NAME(REG_NO) ) AS regNm
		     , REG_DTTM as regDttm
		     , MOD_NO as modNo
		     , ( SELECT FN_GET_USER_NAME(MOD_NO) ) AS modNm
		     , MOD_DTTM as modDttm
          FROM tb_etc_event
         WHERE ORG_CD = #{orgCd}
	</sql>
	
	<sql id="listQuery">
		<include refid="selectQuery"/>
		<if test = "openYn != null and openYn != ''">
		   AND OPEN_YN = #{openYn}
		</if>
	</sql>		

	<select id="list" parameterType="etcEventVO" resultType="etcEventVO">
		/*
			 SQL ID : list
			 설  명 : 이벤트의 전체 목록
	 	*/
	 	<include refid="listQuery"/>
	 	 ORDER BY EVENT_ODR
	</select>
	
	<select id="listPageing" parameterType="etcEventVO" resultType="etcEventVO">
		/*
			 SQL ID : listPageing
			 설  명 : 이벤트의 페이징 목록
	 	*/
	 	<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pagePrefix"/>
	 	<include refid="listQuery"/>
	 	<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pageRnumfix"/>
	 	ORDER BY EVENTODR
	 	<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pageSubfix"/>
	</select>
	
	<select id="count" parameterType="etcEventVO" resultType="Integer">
		/*
			 SQL ID : count
			 설  명 : 이벤트의 전체 카운트
	 	*/
	 	SELECT COUNT(*) FROM (
	 	<include refid="listQuery"/>
	 	) T
	</select>	
	
	<select id="select" parameterType="etcEventVO" resultType="etcEventVO">
		/*
			 SQL ID : select
			 설  명 : 이벤트의 정보 조회
	 	*/
	 	<include refid="selectQuery"/>
           AND EVENT_SN = #{eventSn}	 	
	</select>
	
	<select id="selectKey" resultType="Integer">
		/*
			 SQL ID : selectKey
			 설  명 : 이벤트의 키 생성
	 	*/
	 	SELECT nextval(SQ_ETC_EVENT) 	 	
	</select>	
	
	<insert id="insert" parameterType="etcEventVO" >
		/*
			 SQL ID : insert
			 설  명 : 이벤트의 정보 등록
	 	*/
		INSERT INTO tb_etc_event (
		       EVENT_SN
		     , ORG_CD
		     , EVENT_NM
		     , EVENT_URL
		     , EVENT_POS_CD
		     , EVENT_ODR
		     , EVENT_TRGT
		     , EVENT_IMG_SN
		     , EVENT_DESC
		     , OPEN_YN
		     , REG_NO
		     , REG_DTTM
		     , MOD_NO
		     , MOD_DTTM
		) VALUES (
		       #{eventSn}
		     , #{orgCd} 
		     , #{eventNm}  
		     , #{eventUrl}  
		     , #{eventPosCd}  
		     , ( SELECT IFNULL(FN_GET_NULL(MAX(EVENT_ODR)),0)+1 
		           FROM tb_etc_event AS SUBQUERY  
		          WHERE ORG_CD = #{orgCd} )  
		     , #{eventTrgt}  
		     , #{eventImgSn}  
		     , #{eventDesc}  
		     , #{openYn}  
		     , #{regNo}  
		     , DATE_FORMAT(NOW(), '%Y%m%d%H%i%s') 
		     , #{modNo}  
		     , DATE_FORMAT(NOW(), '%Y%m%d%H%i%s') 
		)
	</insert>
	
	<update id="update" parameterType="etcEventVO" >
		/*
			 SQL ID : update
			 설  명 : 이벤트의 정보 수정
	 	*/
		UPDATE tb_etc_event
		   SET EVENT_NM = #{eventNm}
		     , ORG_CD = #{orgCd}
		     , EVENT_URL = #{eventUrl}
		     , EVENT_POS_CD = #{eventPosCd}
		     , EVENT_ODR = #{eventOdr}
		     , EVENT_TRGT = #{eventTrgt}
		     , EVENT_IMG_SN  = #{eventImgSn}
		     , EVENT_DESC = #{eventDesc}
		     , OPEN_YN = #{openYn}
		     , MOD_NO = #{modNo}
		     , MOD_DTTM = DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
		 WHERE EVENT_SN = #{eventSn}
	</update>	

	<delete id="delete" parameterType="etcEventVO" >
		/*
			 SQL ID : delete
			 설  명 : 이벤트의 정보 삭제
	 	*/
	 	DELETE FROM tb_etc_event 
	 	 WHERE EVENT_SN = #{eventSn}
	</delete>
	 
</mapper>
