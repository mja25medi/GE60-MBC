<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.edutrack.modules.course.course.service.impl.CourseMapper">	

	<select id="selectCrsCd" resultType="String">
		SELECT CONCAT('CRS', LPAD(nextval('SQ_CRS_CRS'),7,'0')) AS UNIT_CD FROM DUAL
	</select>
	<sql id="selectColumnQuery">
				 A.ORG_CD 														
		       , A.CRS_CD 														
		       , A.USE_YN
		       , A.CRS_YEAR
			   , A.CRS_TERM
			   , A.CRS_NM
			   , A.ENRL_APLC_START_DTTM
			   , A.ENRL_APLC_END_DTTM
			   , A.ENRL_START_DTTM
			   , A.ENRL_END_DTTM
			   , A.SCORE_OPEN_START_DTTM
			   , A.SCORE_OPEN_END_DTTM
			   , A.TERM_END_DTTM
			   , A.DEPT_CDS 														
			   , A.DEPT_NMS 														
			   , A.CRS_DESC 														
			   , A.REG_NO 														
			   , A.REG_DTTM 														
			   , A.MOD_NO 														
			   , A.MOD_DTTM 														
	</sql>

	<sql id="selectCourseQuery">
		SELECT 
			<include refid="selectColumnQuery" />
		FROM tb_crs_crs A				
		WHERE 1 = 1										
	</sql>		
		
	<select id="count" parameterType="courseVO" resultType="Integer">
		SELECT 
			COUNT(*)
		FROM tb_crs_crs A						
		WHERE 1 = 1										
		<if test = "orgCd != null and orgCd != ''">
			AND A.ORG_CD = NVL((#{orgCd}), A.ORG_CD)
		</if>
		<if test = "useYn != null and useYn != ''">
			AND A.USE_YN = #{useYn}	
		</if>
		<if test = "searchValue != null and searchValue != ''">
			<if test = "searchKey != null and searchKey == 'crsYear'">
			AND CRS_YEAR LIKE CONCAT('%', NVL(#{searchValue}, ''), '%')
			</if>
			<if test = "searchKey != null and searchKey == 'crsTerm'">
			AND CRS_TERM LIKE CONCAT('%', NVL(#{searchValue}, ''), '%')
			</if>
			<if test = "searchKey != null and searchKey == 'crsCd'">
			AND CRS_CD LIKE CONCAT('%', NVL(#{searchValue}, ''), '%')
			</if>
			<if test = "searchKey != null and searchKey == 'all'">
			   AND ( CRS_YEAR LIKE CONCAT('%', NVL(#{searchValue}, ''), '%')
				OR CRS_TERM LIKE CONCAT('%', NVL(#{searchValue}, ''), '%')
				OR CRS_CD LIKE CONCAT('%', NVL(#{searchValue}, ''), '%'))			   
			</if>
		</if>
	</select>
			
	<select id="list" parameterType="courseVO" resultType="courseVO">
	    <include refid="selectCourseQuery" />
		<if test = "orgCd != null and orgCd != ''">
			AND A.ORG_CD = NVL((#{orgCd}), A.ORG_CD)
		</if>
		<if test = "useYn != null and useYn != ''">
			AND A.USE_YN = #{useYn}	
		</if>
		<if test = "searchValue != null and searchValue != ''">
			<if test = "searchKey != null and searchKey == 'crsYear'">
			AND CRS_YEAR LIKE CONCAT('%', NVL(#{searchValue}, ''), '%')
			</if>
			<if test = "searchKey != null and searchKey == 'crsTerm'">
			AND CRS_TERM LIKE CONCAT('%', NVL(#{searchValue}, ''), '%')
			</if>
			<if test = "searchKey != null and searchKey == 'crsCd'">
			AND CRS_CD LIKE CONCAT('%', NVL(#{searchValue}, ''), '%')
			</if>
			<if test = "searchKey != null and searchKey == 'all'">
			   AND ( CRS_YEAR LIKE CONCAT('%', NVL(#{searchValue}, ''), '%')
				OR CRS_TERM LIKE CONCAT('%', NVL(#{searchValue}, ''), '%')
				OR CRS_CD LIKE CONCAT('%', NVL(#{searchValue}, ''), '%'))			   
			</if>
		</if>
		<if test="searchMode != null and searchMode != ''">
			<if test="searchMode == 'STDPAY'">
				AND A.CRS_CD IN (	SELECT CRS_CD
									FROM tb_crs_cre_crs
									WHERE 1=1
										AND FN_GET_NULL(SBJ_CD) IS NOT NULL
										AND FN_GET_NULL(DEPT_CD) IS NOT NULL 
										AND FN_GET_NULL(CRS_CD) IS NOT NULL
										<if test="deptCd != null and deptCd != ''">
										AND DEPT_CD = #{deptCd}
										</if>
										<if test="sbjCd != null and sbjCd != ''">
										AND SBJ_CD = #{sbjCd}
										</if>
								  )
			</if>
		</if>
		<choose>
			<when test = "sortKey != null and sortKey == 'CRS_CD_ASC'">
				 ORDER BY A.CRS_CD	ASC		
			</when>
			<when test = "sortKey != null and sortKey == 'CRS_CD_DESC'">
			 	ORDER BY A.CRS_CD	DESC	
			</when>
			<when test = "sortKey != null and sortKey == 'CRS_NM_ASC'">
			 	ORDER BY A.CRS_NM	ASC		
			</when>
			<when test = "sortKey != null and sortKey == 'CRS_NM_DESC'">
			 	ORDER BY A.CRS_NM	DESC		
			</when>
			<when test = "sortKey != null and sortKey == 'CRS_CTGR_NM_ASC'">
			 	ORDER BY B.CRS_CTGR_NM ASC
			</when>
			<when test = "sortKey != null and sortKey == 'CRS_CTGR_NM_DESC'">
				ORDER BY B.CRS_CTGR_NM DESC
			</when>
			<when test = "sortKey != null and sortKey == 'CRS_YEAR_TERM_ASC'">
				ORDER BY A.CRS_YEAR ASC, A.CRS_TERM ASC
			</when>
			<when test = "sortKey != null and sortKey == 'CRS_YEAR_TERM_DESC'">
				ORDER BY A.CRS_YEAR DESC, A.CRS_TERM DESC
			</when>
			<otherwise>
			   ORDER BY A.CRS_NM	
			</otherwise>
		</choose>
	</select>
	<select id="listPageing" parameterType="courseVO" resultType="courseVO">
		<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pagePrefix"/>
	    <include refid="selectCourseQuery" />
	    <if test = "orgCd != null and orgCd != ''">
			AND A.ORG_CD = NVL((#{orgCd}), A.ORG_CD)
		</if>
		<if test = "useYn != null and useYn != ''">
			AND A.USE_YN = #{useYn}	
		</if>
		<if test = "searchValue != null and searchValue != ''">
			<if test = "searchKey != null and searchKey == 'crsYear'">
			AND CRS_YEAR LIKE CONCAT('%', NVL(#{searchValue}, ''), '%')
			</if>
			<if test = "searchKey != null and searchKey == 'crsTerm'">
			AND CRS_TERM LIKE CONCAT('%', NVL(#{searchValue}, ''), '%')
			</if>
			<if test = "searchKey != null and searchKey == 'crsCd'">
			AND CRS_CD LIKE CONCAT('%', NVL(#{searchValue}, ''), '%')
			</if>
			<if test = "searchKey != null and searchKey == 'all'">
			   AND ( CRS_YEAR LIKE CONCAT('%', NVL(#{searchValue}, ''), '%')
				OR CRS_TERM LIKE CONCAT('%', NVL(#{searchValue}, ''), '%')
				OR CRS_CD LIKE CONCAT('%', NVL(#{searchValue}, ''), '%'))			   
			</if>
		</if>
		<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pageRnumfix"/>
		<choose>
			<when test = "sortKey != null and sortKey == 'CRS_CD_ASC'">
				 ORDER BY CRS_CD ASC		
			</when>
			<when test = "sortKey != null and sortKey == 'CRS_CD_DESC'">
			 	ORDER BY CRS_CD	DESC	
			</when>
			<when test = "sortKey != null and sortKey == 'CRS_NM_ASC'">
			 	ORDER BY CRS_NM	ASC		
			</when>
			<when test = "sortKey != null and sortKey == 'CRS_NM_DESC'">
			 	ORDER BY CRS_NM	DESC		
			</when>
			<when test = "sortKey != null and sortKey == 'CRS_CTGR_NM_ASC'">
			 	ORDER BY CRS_CTGR_NM ASC
			</when>
			<when test = "sortKey != null and sortKey == 'CRS_CTGR_NM_DESC'">
				ORDER BY CRS_CTGR_NM DESC
			</when>
			<when test = "sortKey != null and sortKey == 'CRS_YEAR_TERM_ASC'">
				ORDER BY CRS_YEAR ASC, CRS_TERM ASC
			</when>
			<when test = "sortKey != null and sortKey == 'CRS_YEAR_TERM_DESC'">
				ORDER BY CRS_YEAR DESC, CRS_TERM DESC
			</when>
			<otherwise>
			   ORDER BY CRS_NM	
			</otherwise>
		</choose>	
		<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pageSubfix"/>
	</select>
	<select id="listForEnroll" parameterType="courseVO" resultType="courseVO">
	    <include refid="selectCourseQuery" />
	    
		<if test = "orgCd != null and orgCd != ''">
			AND A.ORG_CD = NVL((#{orgCd}), A.ORG_CD)
		</if>
		AND A.CRS_CD IN (
							SELECT CRS_CD
							FROM tb_crs_cre_crs
							where FN_GET_NULL(SBJ_CD) IS NOT NULL
								AND FN_GET_NULL(DEPT_CD) IS NOT NULL 
								AND FN_GET_NULL(CRS_CD) IS NOT NULL
								AND dept_cd = #{deptCd}	
						)
		AND DATE_FORMAT(NOW(), '%Y%m%d%H%i%s') BETWEEN A.ENRL_APLC_START_DTTM AND A.ENRL_APLC_END_DTTM
  		ORDER BY A.CRS_YEAR DESC, A.CRS_TERM DESC
	</select>
	<select id="select" parameterType="courseVO" resultType="courseVO">
	    <include refid="selectCourseQuery" />
	    AND CRS_CD = #{crsCd}	
	</select>
    <insert id="insert" parameterType="courseVO">
	    INSERT INTO tb_crs_crs (						
	         CRS_CD 								
	       , ORG_CD 								
	       , USE_YN 								
	       , CRS_YEAR
		   , CRS_TERM
		   , CRS_NM
		   , ENRL_APLC_START_DTTM
		   , ENRL_APLC_END_DTTM
		   , ENRL_START_DTTM
		   , ENRL_END_DTTM
		   , SCORE_OPEN_START_DTTM
		   , SCORE_OPEN_END_DTTM
		   , TERM_END_DTTM
		   , DEPT_CDS				
		   , DEPT_NMS				
		   , CRS_DESC				
	       , REG_NO 								
	       , REG_DTTM 				
	 ) VALUES (									
	         #{crsCd} 								
	       , #{orgCd} 								
	       , #{useYn} 								
	       , #{crsYear} 								
	       , #{crsTerm} 								
	       , CONCAT(#{crsYear},'년도 ',#{crsTerm},'기') 								
	       , #{enrlAplcStartDttm} 								
	       , #{enrlAplcEndDttm} 								
	       , #{enrlStartDttm} 								
	       , #{enrlEndDttm} 								
	       , #{scoreOpenStartDttm} 								
	       , #{scoreOpenEndDttm} 								
	       , #{termEndDttm} 								
	       , #{deptCds} 								
	       , #{deptNms} 								
	       , #{crsDesc} 								
	       , #{regNo} 								
	       , DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')	
	 ) 											  	
    </insert>
    <update id="update" parameterType="courseVO">
		  UPDATE tb_crs_crs 										
		     SET CRS_YEAR = #{crsYear} 		
			   , CRS_TERM = #{crsTerm} 		
			   , ENRL_APLC_START_DTTM = #{enrlAplcStartDttm} 		
			   , ENRL_APLC_END_DTTM = #{enrlAplcEndDttm} 		
			   , ENRL_START_DTTM = #{enrlStartDttm} 		
			   , ENRL_END_DTTM = #{enrlEndDttm} 		
			   , SCORE_OPEN_START_DTTM = #{scoreOpenStartDttm} 		
			   , SCORE_OPEN_END_DTTM = #{scoreOpenEndDttm} 		
			   , TERM_END_DTTM = #{termEndDttm} 		
			   , DEPT_CDS = #{deptCds} 				
			   , DEPT_NMS = #{deptNms} 						
			   , CRS_DESC = #{crsDesc} 				
		       , MOD_NO = #{modNo} 									
		       , MOD_DTTM = DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
		   WHERE CRS_CD = #{crsCd}														  	
    </update>

    <delete id="delete" parameterType="courseVO">
		 DELETE FROM tb_crs_crs				
		  WHERE CRS_CD = #{crsCd}															  	
    </delete>
	<select id="isDupulicateByCrsNm" parameterType="courseVO" resultType="courseVO">
		SELECT CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END AS DUP_YN		
		  FROM tb_crs_crs													
		 WHERE TRIM(REPLACE(CRS_NM,' ','')) = TRIM(REPLACE(#{crsNm},' ',''))
	</select>

	<select id="listForEnrollPagingCount" parameterType="courseVO" resultType="Integer">
		  SELECT 
		 	COUNT(*)
		  FROM tb_crs_crs A, tb_crs_crs_ctgr B								
		  WHERE A.ORG_CD = B.ORG_CD											
		     AND A.CRS_CTGR_CD = B.CRS_CTGR_CD 	    
		<if test = 'crsCtgrCd != null and crsCtgrCd != ""'>
			AND B.CRS_CTGR_PATH LIKE CONCAT('%/',#{crsCtgrCd},'%')	
		</if>
		<if test = 'orgCd != null and orgCd != ""'>
			AND A.ORG_CD = NVL((#{orgCd}), A.ORG_CD)
		</if>
		<![CDATA[
		AND  ( NVL(( SELECT CRE_CNT 							
                 FROM tb_crs_crs_plan 						
                WHERE CRS_CD = A.CRS_CD						
                  AND CRE_YEAR = #{creYear} ), 0) > 0			
        OR ( SELECT COUNT(*)								
                 FROM tb_crs_cre_crs						
                WHERE CRS_CD = A.CRS_CD						
                  AND ( ENRL_END_DTTM >= DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')	
                        OR OFLN_END_DTTM >= DATE_FORMAT(NOW(), '%Y%m%d%H%i%s') ) ) > 0 )	
       ]]>
	</select>
	
	<select id="listForEnrollPaging" parameterType="courseVO" resultType="courseVO">
		<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pagePrefix"/>
	    <include refid="selectCourseQuery" />
	    
		<if test = "crsCtgrCd != null and crsCtgrCd != ''">
			AND B.CRS_CTGR_PATH LIKE CONCAT('%/', #{crsCtgrCd}, '%')
		</if>
		<if test = "orgCd != null and orgCd != ''">
			AND A.ORG_CD = NVL((#{orgCd}), A.ORG_CD)
		</if>
		<![CDATA[
		    AND  ( NVL(( SELECT CRE_CNT						
		                 FROM tb_crs_crs_plan 						
		                WHERE CRS_CD = A.CRS_CD						
		                  AND CRE_YEAR = #{creYear} ), 0) > 0			
		          OR ( SELECT COUNT(*)								
		                 FROM tb_crs_cre_crs						
		                WHERE CRS_CD = A.CRS_CD						
		                  AND ( ENRL_END_DTTM like CONCAT(#{creYear}, '%')	
		                        OR OFLN_END_DTTM like CONCAT(#{creYear}, '%')) ) > 0 )			                  
		]]>
		<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pageRnumfix"/>
		ORDER BY CRS_NM
		<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pageSubfix"/>
	</select>

	<select id="listSubInfo" parameterType="courseVO" resultType="courseVO">
		  SELECT A.ORG_CD 														
		       , A.CRS_CD 														
		       , A.CRS_NM 														
		       , A.CRS_CTGR_CD 												
		       , A.CRS_OPER_MTHD 												
		       , A.CRS_OPER_TYPE 												
		       , A.USE_YN 														
		       , A.REG_NO 														
			    , (SELECT FN_GET_USER_NAME(A.REG_NO) ) AS REG_NM		
		       , A.REG_DTTM 													
		       , A.MOD_NO 														
			    , (SELECT FN_GET_USER_NAME(A.MOD_NO) ) AS MOD_NM		
		       , A.MOD_DTTM 													
		       , B.CRS_CTGR_NM													
		       , B.CRS_CTGR_PATH												
		       , B.CRS_CTGR_PATH_NM											
		       , NVL((A.NOP_LIMIT_YN),'N') AS NOP_LIMIT_YN
		    FROM tb_crs_crs A, tb_crs_crs_ctgr B, tb_crs_crs_onln_sbj C								
		   WHERE A.ORG_CD = B.ORG_CD											
		     AND A.CRS_CTGR_CD = B.CRS_CTGR_CD									
		     AND A.CRS_CD = C.CRS_CD									
		     AND A.ORG_CD = NVL((#{orgCd}), A.ORG_CD)							
		     AND C.SBJ_CD = #{sbjCd}								
		  ORDER BY A.CRS_NM
	</select>

	<select id="listSubInfoOffline" parameterType="courseVO" resultType="courseVO">
		  SELECT A.ORG_CD 														
		       , A.CRS_CD 														
		       , A.CRS_NM 														
		       , A.CRS_CTGR_CD 												
		       , A.CRS_OPER_MTHD 												
		       , A.CRS_OPER_TYPE 												
		       , A.USE_YN 														
		       , A.REG_NO 														
			    , (SELECT FN_GET_USER_NAME(A.REG_NO) ) AS REG_NM		
		       , A.REG_DTTM 													
		       , A.MOD_NO 														
		       , A.OFLN_EDU_PLACE 														
			    , (SELECT FN_GET_USER_NAME(A.MOD_NO) ) AS MOD_NM		
		       , A.MOD_DTTM 													
		       , B.CRS_CTGR_NM													
		       , B.CRS_CTGR_PATH												
		       , B.CRS_CTGR_PATH_NM											
		       , NVL((A.NOP_LIMIT_YN),'N') AS NOP_LIMIT_YN
		    FROM tb_crs_crs A, tb_crs_crs_ctgr B, tb_crs_crs_ofln_sbj C								
		   WHERE A.ORG_CD = B.ORG_CD											
		     AND A.CRS_CTGR_CD = B.CRS_CTGR_CD									
		     AND A.CRS_CD = C.CRS_CD									
		     AND A.ORG_CD = NVL((#{orgCd}), A.ORG_CD)								
		     AND C.SBJ_CD = #{sbjCd}								
		  ORDER BY A.CRS_NM
	</select>

	<select id="listUserCourse" parameterType="String" resultType="courseVO">
		  SELECT B.CRS_CRE_CD, B.CRS_CRE_NM
		    FROM tb_std_std A, tb_crs_cre_crs B 							
		 	WHERE A.CRS_CRE_CD = B.CRS_CRE_CD
		 	AND USER_NO = #{userNo}
		 	AND ENRL_STS IN ('S','C','F');
	</select>
	
	<sql id="selectUserCourseQuery">
	 	<![CDATA[
	 	 SELECT B.CRS_CRE_CD
	 	 	 , B.CRS_CRE_NM
	 	 	 , C.CRS_YEAR
	 	 	 , C.CRS_TERM
	 	 	 , A.ENRL_APLC_DTTM
	 	 	 , C.ENRL_START_DTTM
	 	 	 , C.ENRL_END_DTTM
	 	 	 , A.ENRL_STS
	 	 	 , (SELECT FN_GET_CODE_NAME('ENRL_STS',A.ENRL_STS)) AS ENRL_STS_NM		
		 FROM tb_std_std A, tb_crs_cre_crs B, tb_crs_crs C 							
		 WHERE A.CRS_CRE_CD = B.CRS_CRE_CD
		 AND B.CRS_CD = C.CRS_CD
		 AND A.USER_NO = #{userNo}
		 AND A.ENRL_STS IN ('S','C','F','E')
		 ]]>
	</sql>
	
	
	<sql id="userCourseCountQuery">
		<![CDATA[
		SELECT COUNT(*)
          FROM tb_std_std
         WHERE USER_NO = #{userNo}
		]]>
	</sql>
	
	<select id="countCourse" parameterType="courseVO" resultType="Integer">
		<include refid="userCourseCountQuery"/>
	</select>		
	
	
	<select id="listUserStdCourse" parameterType="courseVO" resultType="courseVO">
	 	<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pagePrefix"/>
	 	<include refid="selectUserCourseQuery"/>
	 	<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pageRnumfix"/>
	 	<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pageSubfix"/>
	</select>
	
	
	<select id="listStudentPaymentCourseByUserNo" parameterType="String" resultType="courseVO">
		<include refid="selectCourseQuery"/>
		AND A.CRS_CD IN (
							SELECT C.CRS_CD 
							FROM tb_std_std A, tb_std_pay_info B, tb_crs_cre_crs C
							WHERE A.PAYM_NO = B.PAYM_NO
							AND A.USER_NO = B.USER_NO
							AND A.CRS_CRE_CD = C.CRS_CRE_CD 
							AND B.USER_NO = #{userNo}
						)
	</select>
	
	<select id="listForCourseStatus" parameterType="courseVO" resultType="courseVO">
		SELECT
		<include refid="selectColumnQuery"/>
		FROM tb_crs_crs A
		WHERE 1=1
		 AND CRS_YEAR = #{crsYear}
		 AND ORG_CD = #{orgCd}
		ORDER BY CRS_NM ASC
	</select>
</mapper>		