<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.edutrack.modules.etc.hrdapi.service.impl.HrdApiSyncMapper">	

	<sql id="selectQuery">
		SELECT 
		  A.CRS_YEAR
		, A.CRS_TERM
		, A.API_PK
		, A.SYNC_GUBUN_CD
		, A.SYNC_STATUS
		, A.SYNC_RESULT_MSG
		, A.REG_NO
		, A.REG_DTTM
		, A.MOD_NO
		, A.MOD_DTTM
	</sql>
	<sql id="fromQuery">
		FROM tb_etc_api_sync A
	</sql>
	<sql id="whereQuery">
		WHERE 1=1
		<if test = 'crsYear != null and crsYear != ""'>
		   AND A.CRS_YEAR = #{crsYear}
		</if>
		<if test = 'crsTerm != null and crsTerm != ""'>
		   AND A.CRS_TERM = #{crsTerm}
		</if>
		<if test = 'apiPk != null and apiPk != ""'>
		   AND A.API_PK = #{apiPk}
		</if>
		<if test = 'syncGubunCd != null and syncGubunCd != ""'>
		   AND A.SYNC_GUBUN_CD = #{syncGubunCd}
		</if>
		<if test = 'syncStatus != null and syncStatus != ""'>
		   AND A.SYNC_STATUS = #{syncStatus}
		</if>
	</sql>
	<sql id="selectUserQuery">
		<include refid="selectQuery"/>
		, B.USER_NM
		, B.JUMIN_NO
		, B.EMAIL
		, B.MOBILE_NO	
		<include refid="fromQuery"/>
		INNER JOIN (
			SELECT 
			  C.USER_NO
			, C.USER_NM
			, C.JUMIN_NO	
			, C.EMAIL
			, C.MOBILE_NO		
			FROM tb_usr_user_info C,tb_usr_login D 
			WHERE C.USER_NO = D.USER_NO
			<if test = "searchFrom != null and searchFrom != '' and searchTo != null and searchTo != ''">
				AND DATE_FORMAT(D.REG_DTTM , '%Y%m%d') BETWEEN DATE_FORMAT(#{searchFrom} , '%Y%m%d') AND DATE_FORMAT(#{searchTo} , '%Y%m%d')
			</if>
		) B
		ON A.API_PK = B.USER_NO
		AND A.SYNC_GUBUN_CD = 'USER_INFO'
	</sql>
	
	<sql id="selectUserCountQuery">
		SELECT COUNT(*)
        <include refid="fromQuery"/>
        INNER JOIN (
			SELECT 
			  C.USER_NO
			, C.USER_NM
			, C.JUMIN_NO	
			, C.EMAIL
			, C.MOBILE_NO		
			FROM tb_usr_user_info C,tb_usr_login D 
			WHERE C.USER_NO = D.USER_NO
			<if test = "searchFrom != null and searchFrom != '' and searchTo != null and searchTo != ''">
				AND DATE_FORMAT(D.REG_DTTM , '%Y%m%d') BETWEEN DATE_FORMAT(#{searchFrom} , '%Y%m%d') AND DATE_FORMAT(#{searchTo} , '%Y%m%d')
			</if>
		) B
		ON A.API_PK = CONCAT(B.USER_NO ,'|',B.LOGIN_TRY_SN)
		AND A.SYNC_GUBUN_CD = 'USER_INFO'
	</sql>
	
	<sql id="selectUserLoginQuery">
		<include refid="selectQuery"/>
		, B.USER_NO
		, B.USER_ID
		, B.LOGIN_TRY_DTTM
		, B.CONN_IP
		, B.BROWSER_INFO	
		<include refid="fromQuery"/>
		INNER JOIN (
			SELECT 
			  C.LOGIN_TRY_SN
		    , C.USER_NO
		    , C.USER_ID
		    , C.LOGIN_TRY_DTTM
		    , C.LOGIN_SUCC_YN
		    , C.BROWSER_INFO
		    , C.CONN_IP	
			FROM tb_log_user_login_try_log C
			WHERE 1=1
			AND C.LOGIN_SUCC_YN = 'Y'
			<if test = "searchFrom != null and searchFrom != '' and searchTo != null and searchTo != ''">
				AND DATE_FORMAT(C.LOGIN_TRY_DTTM , '%Y%m%d') BETWEEN DATE_FORMAT(#{searchFrom} , '%Y%m%d') AND DATE_FORMAT(#{searchTo} , '%Y%m%d')
			</if>
		) B
		ON A.API_PK = CONCAT(B.USER_NO ,'|',B.LOGIN_TRY_SN)
		AND A.SYNC_GUBUN_CD = 'USER_LOGIN'
	</sql>
	
	<sql id="selectUserLoginCountQuery">
		SELECT COUNT(*)
        <include refid="fromQuery"/>
        INNER JOIN (
			SELECT 
			  C.LOGIN_TRY_SN
		    , C.USER_NO
		    , C.USER_ID
		    , C.LOGIN_TRY_DTTM
		    , C.LOGIN_SUCC_YN
		    , C.BROWSER_INFO
		    , C.CONN_IP	
			FROM tb_log_user_login_try_log C
			WHERE 1=1
			AND C.LOGIN_SUCC_YN = 'Y'
			<if test = "searchFrom != null and searchFrom != '' and searchTo != null and searchTo != ''">
				AND DATE_FORMAT(C.LOGIN_TRY_DTTM , '%Y%m%d') BETWEEN DATE_FORMAT(#{searchFrom} , '%Y%m%d') AND DATE_FORMAT(#{searchTo} , '%Y%m%d')
			</if>
		) B
		ON A.API_PK = CONCAT(B.USER_NO ,'|',B.LOGIN_TRY_SN)
		AND A.SYNC_GUBUN_CD = 'USER_LOGIN'
	</sql>
	
	<sql id="listQuery">
		<include refid="selectQuery"/>
		<include refid="fromQuery"/>
		<include refid="whereQuery"/>
	</sql>
	<sql id="selectCountQuery">
		SELECT COUNT(*)
        FROM tb_etc_api_sync A
	</sql>
	<select id="selectHrdApiSync" parameterType="hrdApiSyncVO" resultType="egovMap">
		/*
			 SQL ID : selectHrdApiSync
			 설  명 : api 년도 기수별 전송 데이터 조회
	 	*/
		<include refid="selectQuery"/>
		<include refid="fromQuery"/>
		<include refid="whereQuery"/>
		ORDER BY A.MOD_DTTM DESC
	</select>
	
	<select id="listHrdApiSync" parameterType="hrdApiSyncVO" resultType="egovMap">
		/*
			 SQL ID : listHrdApiSync
			 설  명 : api 년도 기수별 전송 데이터  리스트 조회
	 	*/
		<include refid="selectQuery"/>
		<include refid="fromQuery"/>
		<include refid="whereQuery"/>
		ORDER BY A.MOD_DTTM DESC
	</select>
	
	<select id="listPageingHrdApiSync" parameterType="hrdApiSyncVO" resultType="egovMap">
		/*
			 SQL ID : listPageingHrdApiSync
			 설  명 : 년도 기수별 전송 데이터 페이징 목록
	 	*/
	 	<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pagePrefix"/>
	 	<include refid="listQuery"/>
	 	<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pageRnumfix"/>
		<if test = 'sortKey == null or sortKey == ""'>
		   ORDER BY MOD_DTTM DESC
		</if>
	 	<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pageSubfix"/>
	</select>
	
	<select id="countHrdApiSync" parameterType="hrdApiSyncVO" resultType="Integer">
		/*
			 SQL ID : count
			 설  명 : 년도 기수별 전송 데이터 전체 카운트
	 	*/
		<include refid="selectCountQuery"/>
		<include refid="whereQuery"/>
	</select>		
	
	<insert id="insertHrdApiSync" parameterType="hrdApiSyncVO" >
		/*
			 SQL ID : insertHrdApiSync
			 설  명 : api 년도 기수별 전송 데이터  등록
	 	*/
		INSERT INTO tb_etc_api_sync (
		      CRS_YEAR
			, CRS_TERM
			, API_PK
			, SYNC_GUBUN_CD
			, SYNC_STATUS
			, SYNC_RESULT_MSG
			, REG_NO
			, REG_DTTM
			, MOD_NO
			, MOD_DTTM                                    
		) VALUES (
		       #{crsYear} 
		     , #{crsTerm}
		     , #{apiPk}
		     , #{syncGubunCd}
		     , #{syncStatus}
		     , #{syncResultMsg} 
		     , #{regNo}
		     , DATE_FORMAT( NOW(), '%Y%m%d%H%i%s') 
		     , #{modNo}
		     , DATE_FORMAT( NOW(), '%Y%m%d%H%i%s') 
		)	 	
	</insert>
	
	
	<update id="updateHrdApiSync" parameterType="hrdApiSyncVO" >
		/*
			 SQL ID : updateHrdApiSync
			 설  명 : api 년도 기수별 전송 데이터  수정
	 	*/
		UPDATE tb_etc_api_sync
		   SET MOD_DTTM         =   DATE_FORMAT( NOW(), '%Y%m%d%H%i%s')  
		     <if test = 'syncResultMsg != null'>
		     , SYNC_RESULT_MSG  =   #{syncResultMsg}
		     </if>
		     <if test = 'modNo != null and modNo != ""'>
		     , MOD_NO			=   #{modNo}
		     </if>
		     <if test = 'syncStatus != null and syncStatus != ""'>
			 , SYNC_STATUS      =   #{syncStatus}
		     </if>
		WHERE CRS_YEAR = #{crsYear}
		AND CRS_TERM = #{crsTerm}
		AND SYNC_GUBUN_CD = #{syncGubunCd}
		<if test = 'apiPk != null and apiPk != ""'>
			AND API_PK = #{apiPk}
		</if>
		<if test = "searchKey != null and searchKey == 'syncStatus' and searchValue != null and searchValue != ''">
		   AND SYNC_STATUS = #{searchValue}
		</if>
	</update>
	
	<delete id="deleteHrdApiSync" parameterType="hrdApiSyncVO" >
		/*
			 SQL ID : deleteHrdApiSync
			 설  명 : api 년도 기수별 전송 데이터  삭제
	 	*/
		DELETE FROM tb_etc_api_sync
		WHERE CRS_YEAR = #{crsYear}
		AND CRS_TERM = #{crsTerm}
		AND SYNC_GUBUN_CD = #{syncGubunCd}
		AND API_PK = #{apiPk}
	</delete>
	
	<update id="mergeUserInfoHrdApiSync" parameterType="hrdApiSyncVO" >
		/*
			 SQL ID : mergeUserInfoHrdApiSync
			 설  명 : api 년도 기수별 전송 데이터  등록
	 	*/
		INSERT INTO tb_etc_api_sync (
		      CRS_YEAR
			, CRS_TERM
			, API_PK
			, SYNC_GUBUN_CD
			, SYNC_STATUS
			, REG_NO
			, REG_DTTM
			, MOD_NO
			, MOD_DTTM                                    
		) SELECT 
		  #{crsYear} 
		, #{crsTerm}		
		, A.USER_NO
		, 'USER_INFO'
		, 'W'		
		, #{regNo}
		, DATE_FORMAT( NOW(), '%Y%m%d%H%i%s') 
		, #{modNo}
		, DATE_FORMAT( NOW(), '%Y%m%d%H%i%s')
		FROM tb_usr_user_info A,tb_usr_login B 
		WHERE A.USER_NO = B.USER_NO
		<if test = "searchFrom != null and searchFrom != '' and searchTo != null and searchTo != ''">
			AND DATE_FORMAT(B.REG_DTTM , '%Y%m%d') BETWEEN DATE_FORMAT(#{searchFrom} , '%Y%m%d') AND DATE_FORMAT(#{searchTo} , '%Y%m%d')
		</if>
		<if test = "apiPk != null and apiPk != ''">
			AND A.USER_NO = #{apiPk}
		</if>
		ON DUPLICATE KEY
			UPDATE MOD_NO = #{modNo}
			,MOD_DTTM = DATE_FORMAT( NOW(), '%Y%m%d%H%i%s') 
			;	 	
	</update>
	
	
	<select id="listUserInfoHrdApiSync" parameterType="hrdApiSyncVO" resultType="egovMap">
		SELECT 
		  D.AGENT_PK		
		, @row_num := @row_num + 1 as SEQ		
		, D.USER_AGENT_PK	
		, D.USER_NAME	
		, D.RES_NO		
		, D.ENC_RES_NO	
		, D.EMAIL		
		, D.MOBILE		
		, D.CHANGE_STATE	
		, DATE_FORMAT( NOW(), '%Y-%m-%d %H:%i:%s') as REG_DATE		
		, D.NW_INO		
		, D.TRNEE_SE		
		, D.IRGLBR_SE
		FROM tb_etc_api_sync C, (select @row_num := 0) as B
		INNER JOIN (
			SELECT 
			  'ocuhrd' as AGENT_PK		
			, A.USER_NO as USER_AGENT_PK	
			, A.USER_NM as USER_NAME	
			, A.JUMIN_NO as RES_NO		
			, '메디오피아테크 HRD-NET' as ENC_RES_NO	
			, A.EMAIL as EMAIL		
			, A.MOBILE_NO as MOBILE		
			, 'C' as CHANGE_STATE	
			, '12345678' as NW_INO		
			, '007' as TRNEE_SE		
			, '000' as IRGLBR_SE
			FROM tb_usr_user_info A,tb_usr_login B 
			WHERE A.USER_NO = B.USER_NO
			<if test = "searchFrom != null and searchFrom != '' and searchTo != null and searchTo != ''">
				AND DATE_FORMAT(B.REG_DTTM , '%Y%m%d') BETWEEN DATE_FORMAT(#{searchFrom} , '%Y%m%d') AND DATE_FORMAT(#{searchTo} , '%Y%m%d')
			</if>
		) D
		ON C.API_PK = D.USER_AGENT_PK
		WHERE 1=1
		<if test = 'crsYear != null and crsYear != ""'>
		   AND C.CRS_YEAR = #{crsYear}
		</if>
		<if test = 'crsTerm != null and crsTerm != ""'>
		   AND C.CRS_TERM = #{crsTerm}
		</if>
		<if test = 'apiPk != null and apiPk != ""'>
		   AND C.API_PK = #{apiPk}
		</if>
		<if test = 'syncGubunCd != null and syncGubunCd != ""'>
		   AND C.SYNC_GUBUN_CD = #{syncGubunCd}
		</if>
		<if test = "searchKey != null and searchKey == 'syncStatus' and searchValue != null and searchValue != ''">
		   AND C.SYNC_STATUS = #{searchValue}
		</if>
	</select>
	
	<select id="listUserInfo" parameterType="hrdApiSyncVO" resultType="egovMap">
		/*
			 SQL ID : listUserInfo
			 설  명 : api 년도 기수별 전송 데이터  리스트 조회
	 	*/
		<include refid="selectUserQuery"/>
		<include refid="whereQuery"/>
		<if test = "searchKey != null and searchKey == 'pk' and searchValue != null and searchValue != ''">
			AND A.API_PK like CONCAT('%',#{searchValue},'%')
		</if>
		<if test = "searchKey != null and searchKey == 'pkNm' and searchValue != null and searchValue != ''">
			AND B.USER_NM like CONCAT('%',#{searchValue},'%')
		</if>
		<if test = 'sortKey == null or sortKey == ""'>
		   ORDER BY A.MOD_DTTM DESC
		</if>
	</select>
	
	<select id="countUserInfo" parameterType="hrdApiSyncVO" resultType="Integer">
		/*
			 SQL ID : countUserInfo
			 설  명 : 년도 기수별 전송 데이터 전체 카운트
	 	*/
		<include refid="selectUserCountQuery"/>
		<include refid="whereQuery"/>
	</select>		
	
	<select id="listPageingUserInfo" parameterType="hrdApiSyncVO" resultType="egovMap">
		/*
			 SQL ID : listPageingUserInfo
			 설  명 : 년도 기수별 전송 데이터 페이징 목록
	 	*/
	 	<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pagePrefix"/>
	 	<include refid="selectUserQuery"/>
	 	<include refid="whereQuery"/>
		<if test = "searchKey != null and searchKey == 'pk' and searchValue != null and searchValue != ''">
			AND A.API_PK like CONCAT('%',#{searchValue},'%')
		</if>
		<if test = "searchKey != null and searchKey == 'pkNm' and searchValue != null and searchValue != ''">
			AND B.USER_NM like CONCAT('%',#{searchValue},'%')
		</if>
	 	<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pageRnumfix"/>
		<if test = 'sortKey == null or sortKey == ""'>
		   ORDER BY MOD_DTTM DESC
		</if>
	 	<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pageSubfix"/>
	</select>
	
	<update id="mergeUserLoginHrdApiSync" parameterType="hrdApiSyncVO" >
		/*
			 SQL ID : mergeUserLoginHrdApiSync
			 설  명 : api 년도 기수별 회원 로그인 정보 전송 데이터  등록
	 	*/
		INSERT INTO tb_etc_api_sync (
		      CRS_YEAR
			, CRS_TERM
			, API_PK
			, SYNC_GUBUN_CD
			, SYNC_STATUS
			, REG_NO
			, REG_DTTM
			, MOD_NO
			, MOD_DTTM                                    
		) SELECT 
		  #{crsYear} 
		, #{crsTerm}		
		, CONCAT(A.USER_NO ,'|',A.LOGIN_TRY_SN)
		, 'USER_LOGIN'
		, 'W'		
		, #{regNo}
		, DATE_FORMAT( NOW(), '%Y%m%d%H%i%s') 
		, #{modNo}
		, DATE_FORMAT( NOW(), '%Y%m%d%H%i%s')
		FROM tb_log_user_login_try_log A
		WHERE 1=1
		AND A.LOGIN_SUCC_YN = 'Y'
		<if test = "searchFrom != null and searchFrom != '' and searchTo != null and searchTo != ''">
			AND DATE_FORMAT(A.LOGIN_TRY_DTTM , '%Y%m%d') BETWEEN DATE_FORMAT(#{searchFrom} , '%Y%m%d') AND DATE_FORMAT(#{searchTo} , '%Y%m%d')
		</if>
		<if test = "apiPk != null and apiPk != ''">
			AND A.USER_NO = #{apiPk}
		</if>
		ON DUPLICATE KEY
			UPDATE MOD_NO = #{modNo}
			,MOD_DTTM = DATE_FORMAT( NOW(), '%Y%m%d%H%i%s') 
			;	 	
	</update>
	
	
	<select id="listUserLoginHrdApiSync" parameterType="hrdApiSyncVO" resultType="egovMap">
		/*
			 SQL ID : listUserLoginHrdApiSync
			 설  명 : api 년도 기수별 회원 로그인 정보 전송 데이터  조회
	 	*/
		SELECT 
		  D.AGENT_PK		
		, @row_num := @row_num + 1 as SEQ		
		, D.USER_AGENT_PK	
		, D.LOGIN_DATE	
		, D.LOGIN_IP		
		FROM tb_etc_api_sync C, (select @row_num := 0) as B
		INNER JOIN (
			SELECT 
			  'ocuhrd' as AGENT_PK		
			, A.USER_NO as USER_AGENT_PK	
			, A.LOGIN_TRY_SN as LOGIN_TRY_SN
			, DATE_FORMAT( A.LOGIN_TRY_DTTM, '%Y-%m-%d %H:%i:%s') as LOGIN_DATE
			, A.CONN_IP	as LOGIN_IP
			FROM tb_log_user_login_try_log A
			WHERE 1=1
			AND A.LOGIN_SUCC_YN = 'Y'
			<if test = "searchFrom != null and searchFrom != '' and searchTo != null and searchTo != ''">
				AND DATE_FORMAT(A.LOGIN_TRY_DTTM , '%Y%m%d') BETWEEN DATE_FORMAT(#{searchFrom} , '%Y%m%d') AND DATE_FORMAT(#{searchTo} , '%Y%m%d')
			</if>
		) D
		ON C.API_PK = CONCAT(D.USER_AGENT_PK ,'|',D.LOGIN_TRY_SN)
		AND C.SYNC_GUBUN_CD = 'USER_LOGIN'
		WHERE 1=1
		<if test = 'crsYear != null and crsYear != ""'>
		   AND C.CRS_YEAR = #{crsYear}
		</if>
		<if test = 'crsTerm != null and crsTerm != ""'>
		   AND C.CRS_TERM = #{crsTerm}
		</if>
		<if test = 'apiPk != null and apiPk != ""'>
		   AND C.API_PK = #{apiPk}
		</if>
		<if test = 'syncGubunCd != null and syncGubunCd != ""'>
		   AND C.SYNC_GUBUN_CD = #{syncGubunCd}
		</if>
		<if test = "searchKey != null and searchKey == 'syncStatus' and searchValue != null and searchValue != ''">
		   AND C.SYNC_STATUS = #{searchValue}
		</if>
	</select>
	
	<select id="listUserLogin" parameterType="hrdApiSyncVO" resultType="egovMap">
		/*
			 SQL ID : listUserLogin
			 설  명 : api 년도 기수별 회원로그인 전송 데이터  리스트 조회
	 	*/
		<include refid="selectUserLoginQuery"/>
		<include refid="whereQuery"/>
		<if test = "searchKey != null and searchKey == 'pk' and searchValue != null and searchValue != ''">
			AND A.API_PK like CONCAT('%',#{searchValue},'%')
		</if>
		<if test = "searchKey != null and searchKey == 'pkNm' and searchValue != null and searchValue != ''">
			AND B.USER_ID like CONCAT('%',#{searchValue},'%')
		</if>
		<if test = 'sortKey == null or sortKey == ""'>
		   ORDER BY A.MOD_DTTM DESC
		</if>
	</select>
	
	<select id="countUserLogin" parameterType="hrdApiSyncVO" resultType="Integer">
		/*
			 SQL ID : countUserLogin
			 설  명 : 년도 기수별 회원로그인 전송 데이터 전체 카운트
	 	*/
		<include refid="selectUserLoginCountQuery"/>
		<include refid="whereQuery"/>
	</select>		
	
	<select id="listPageingUserLogin" parameterType="hrdApiSyncVO" resultType="egovMap">
		/*
			 SQL ID : listPageingUserLogin
			 설  명 : 년도 기수별 회원 로그인 전송 데이터 페이징 목록
	 	*/
	 	<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pagePrefix"/>
	 	<include refid="selectUserLoginQuery"/>
	 	<include refid="whereQuery"/>
		<if test = "searchKey != null and searchKey == 'pk' and searchValue != null and searchValue != ''">
			AND A.API_PK like CONCAT('%',#{searchValue},'%')
		</if>
		<if test = "searchKey != null and searchKey == 'pkNm' and searchValue != null and searchValue != ''">
			AND B.USER_ID like CONCAT('%',#{searchValue},'%')
		</if>
	 	<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pageRnumfix"/>
		<if test = 'sortKey == null or sortKey == ""'>
		   ORDER BY MOD_DTTM DESC
		</if>
	 	<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pageSubfix"/>
	</select>
	
	<update id="mergeCntsHrdApiSync" parameterType="hrdApiSyncVO" >
		/*
			 SQL ID : mergeCntsHrdApiSync
			 설  명 : api 년도 기수별 전송 데이터  등록 - 컨텐츠
	 	*/
		INSERT INTO tb_etc_api_sync (
		      CRS_YEAR
			, CRS_TERM
			, API_PK
			, SYNC_GUBUN_CD
			, SYNC_STATUS
			, REG_NO
			, REG_DTTM
		) SELECT #{crsYear} 
				, #{crsTerm}
				, A.UNIT_CD
				, 'CONTENTS'
				, 'W'
				, #{regNo}
				, DATE_FORMAT( NOW(), '%Y%m%d%H%i%s') 
		FROM tb_crs_sbj_cnts A		
		WHERE
			A.SBJ_CD IN (
							SELECT SBJ_CD
							FROM tb_crs_cre_crs
							WHERE CRS_CD = #{crsCd}
						)
		ON DUPLICATE KEY
			UPDATE MOD_NO = #{modNo}
			,MOD_DTTM = DATE_FORMAT( NOW(), '%Y%m%d%H%i%s') 
		
	</update>
	
	<select id="listCntsHrdApiSync" parameterType="hrdApiSyncVO" resultType="egovMap">
		SELECT 
		  D.AGENT_PK		
		, @row_num := @row_num + 1 as SEQ		
		, D.COURSE_AGENT_PK	
		, D.CONTENTS_AGENT_PK	
		, D.RMTN_TCMT_SEQ		
		, D.RMTN_TCMT_SECD	
		, D.TRNG_CRSN		
		, D.CHANGE_STATE		
		, DATE_FORMAT( NOW(), '%Y-%m-%d %H:%i:%s') as REG_DATE		
		FROM tb_etc_api_sync C, (select @row_num := 0) as B
		LEFT OUTER JOIN (
			SELECT 
				'ocuhrd' as AGENT_PK
				, A.SBJ_CD AS COURSE_AGENT_PK
				, A.UNIT_CD AS CONTENTS_AGENT_PK
				, 0 AS RMTN_TCMT_SEQ
				, 'C' AS RMTN_TCMT_SECD
				, A.UNIT_NM AS TRNG_CRSN
				, 'C' AS CHANGE_STATE
		FROM tb_crs_sbj_cnts A		
		) D
		ON C.API_PK = D.CONTENTS_AGENT_PK
		WHERE 1=1
		<if test = 'crsYear != null and crsYear != ""'>
		   AND C.CRS_YEAR = #{crsYear}
		</if>
		<if test = 'crsTerm != null and crsTerm != ""'>
		   AND C.CRS_TERM = #{crsTerm}
		</if>
		<if test = 'apiPk != null and apiPk != ""'>
		   AND C.API_PK = #{apiPk}
		</if>
	</select>
	
	
	<select id="getClassTmeUnit" parameterType="hrdOtpVO" resultType="hrdOtpVO">
		SELECT 
		  A.UNIT_ODR as CLASS_TME
		FROM tb_crs_sbj_cnts A
		WHERE 1=1
		AND A.UNIT_TYPE = 'C'
	    AND A.SBJ_CD = #{sbjCd}
	    AND A.UNIT_CD = #{unitCd}
	</select>
	
	<select id="getClassTmeExam" parameterType="hrdOtpVO" resultType="hrdOtpVO">
		SELECT 
		  A.STARE_CNT as CLASS_TME
		FROM tb_lec_exam_stare A
		WHERE 1=1
		AND A.EXAM_SN = #{examSn}
	    AND A.STD_NO = #{stdNo}
	</select>
	
	<select id="getClassTmeSemiExam" parameterType="hrdOtpVO" resultType="hrdOtpVO">
		SELECT 
		  A.STARE_CNT as CLASS_TME
		FROM tb_lec_exam_stare A
		WHERE 1=1
		AND A.EXAM_SN = #{examSn}
	    AND A.STD_NO = #{stdNo}
	</select>
	
	<select id="getClassTmeAsmt" parameterType="hrdOtpVO" resultType="hrdOtpVO">
		SELECT 
		  A.SEND_CNT as CLASS_TME
		FROM tb_lec_asmt_send A
		WHERE 1=1
		AND A.ASMT_SN = #{asmtSn}
	    AND A.STD_NO = #{stdNo}
	</select>
	
	
</mapper>