<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.edutrack.modules.etc.hrdapi.service.impl.HrdApiScoreMapper">	
	
	<sql id="selectQuery">
		SELECT 
			A.CRS_CD
			, A.NUM
			, A.AGENT_PK
			, A.SEQ
			, A.USER_AGENT_PK
			, A.COURSE_AGENT_PK
			, A.CLASS_AGENT_PK
			, A.EVAL_TYPE
			, DATE_FORMAT(A.SUBMIT_DATE, '%Y%m%d%H%i%s') AS SUBMIT_DATE
			, A.SCORE
			, A.ACCESS_IP
			, A.SUBMIT_DUE_DT
			, A.CHANGE_STATE
			, A.IS_COPIED_ANSWER
			, DATE_FORMAT(A.REG_DATE, '%Y%m%d%H%i%s') AS REG_DATE
			, A.EVAL_CD
			, A.CHASI
			, A.START_END_FLAG
			, A.CRS_YEAR
			, A.CRS_TERM
			, A.SYNC_STATUS
			, A.SYNC_RESULT_MSG
			, A.REG_NO
			, A.REG_DTTM
			, A.MOD_NO
			, A.MOD_DTTM
	</sql>
	<sql id="fromQuery">
		FROM tb_hrd_score A
	</sql>
	<sql id="whereQuery">
		WHERE 1=1
		<if test = 'num != null and num != ""'>
		   AND A.NUM = #{num}
		</if>
		<if test = 'syncStatus != null and syncStatus != ""'>
		   AND A.SYNC_STATUS = #{syncStatus}
		</if>
		<if test = "searchFrom != null and searchFrom != '' and searchTo != null and searchTo != ''">
			AND DATE_FORMAT(A.REG_DTTM , '%Y%m%d') BETWEEN DATE_FORMAT(#{searchFrom} , '%Y%m%d') AND DATE_FORMAT(#{searchTo} , '%Y%m%d')
		</if>
		<if test="crsCd != null and crsCd != ''">
			AND A.CRS_CD = #{crsCd}
		</if>
		<if test = "searchKey != null and searchKey == 'user' and searchValue != null and searchValue != ''">
			AND A.USER_AGENT_PK like CONCAT('%',#{searchValue},'%')
		</if>
		<if test = "searchKey != null and searchKey == 'course' and searchValue != null and searchValue != ''">
			AND A.COURSE_AGENT_PK like CONCAT('%',#{searchValue},'%')
		</if>
		<if test = "searchKey != null and searchKey == 'class' and searchValue != null and searchValue != ''">
			AND A.CLASS_AGENT_PK like CONCAT('%',#{searchValue},'%')
		</if>
	</sql>
	<sql id="listOrderQuery">
		<if test = 'sortKey != null and sortKey != ""'>
			<if test = 'sortKey == "STD_NO_ASC"'>
			 ORDER BY A.STD_NO ASC
			</if>
			<if test = 'sortKey == "STD_NO_DESC"'>
			 ORDER BY A.STD_NO DESC
			</if>
			<if test = 'sortKey == "NUM_ASC"'>
			 ORDER BY A.NUM ASC
			</if>
			<if test = 'sortKey == "NUM_DESC"'>
			 ORDER BY A.NUM DESC
			</if>
		</if>
		<if test = 'sortKey == null or sortKey == ""'>
		   ORDER BY A.REG_DTTM DESC
		</if>
	</sql>
	
	<sql id="listPagingOrderQuery">
		<if test = 'sortKey != null and sortKey != ""'>
			<if test = 'sortKey == "STD_NO_ASC"'>
			 ORDER BY STD_NO ASC
			</if>
			<if test = 'sortKey == "STD_NO_DESC"'>
			 ORDER BY STD_NO DESC
			</if>
			<if test = 'sortKey == "NUM_ASC"'>
			 ORDER BY NUM ASC
			</if>
			<if test = 'sortKey == "NUM_DESC"'>
			 ORDER BY NUM DESC
			</if>
		</if>
		<if test = 'sortKey == null or sortKey == ""'>
		   ORDER BY REG_DTTM DESC
		</if>
	</sql>
	
	<sql id="listQuery">
		<include refid="selectQuery"/>
		<include refid="fromQuery"/>
		<include refid="whereQuery"/>
	</sql>
	
	<insert id="insert">
		INSERT INTO tb_hrd_score (
			CRS_CD
			,AGENT_PK
			,SEQ
			,USER_AGENT_PK
			,COURSE_AGENT_PK
			,CLASS_AGENT_PK
			,EVAL_TYPE
			,SUBMIT_DATE
			,SCORE
			,ACCESS_IP
			,SUBMIT_DUE_DT
			,CHANGE_STATE
			,IS_COPIED_ANSWER
			,REG_DATE
			,EVAL_CD
			,CHASI
			,START_END_FLAG
			,LMS_FLAG
			,SYNC_STATUS
			,SYNC_RESULT_MSG
			,REG_NO
			,REG_DTTM
			,MOD_NO
			,MOD_DTTM
			,CRS_CRE_CD
			,EVAL_TYPE_CD
			,STD_NO
		) VALUE(
			#{crsCd}
			,#{agentPk        }
			,#{seq            }
			,#{userAgentPk    }
			,#{courseAgentPk  }
			,#{classAgentPk   }
			,#{evalType       }
			<choose>
				<when test='num != null and num != ""'>,(SELECT a.SUBMIT_DATE FROM tb_hrd_score a WHERE a.NUM = #{num})</when>
				<otherwise>,NOW()</otherwise>
			</choose>
			,#{score          }
			,#{accessIp       }
			,#{submitDueDt    }
			,#{changeState    }
			,#{isCopiedAnswer }
			,NOW()
			,#{evalCd         }
			,#{chasi          }
			,#{startEndFlag   }
			,#{lmsFlag   }
			,#{syncStatus     }
			,#{syncResultMsg  }
			,#{regNo          }
			, DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
			,#{modNo          }
			, DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
			,#{crsCreCd       }
			,#{evalTypeCd     }
			,#{stdNo     }
		)
		
	</insert>
	
	<update id="update" parameterType="hrdApiScoreVO">
		UPDATE tb_hrd_score
			SET MOD_DTTM = DATE_FORMAT( NOW(), '%Y%m%d%H%i%s')  
				<if test = 'syncResultMsg != null'>
				 , SYNC_RESULT_MSG  =   #{syncResultMsg}
				</if>
				<if test = 'modNo != null and modNo != ""'>
				 , MOD_NO			=   #{modNo}
				</if>
				<if test = 'syncStatus != null and syncStatus != ""'>
				 , SYNC_STATUS      =   #{syncStatus}
				</if>
		WHERE 1 = 1
			<!-- AND USER_AGENT_PK = #{userAgentPk}
			AND COURSE_AGENT_PK = #{courseAgentPk}
			AND CLASS_AGENT_PK = #{classAgentPk} -->
			<!-- <if test = 'num != null and num != ""'> -->
				AND NUM = #{num}
			<!-- </if> -->
			<if test = "searchKey != null and searchKey == 'syncStatus' and searchValue != null and searchValue != ''">
			   AND SYNC_STATUS = #{searchValue}
			</if>
	</update>
	
	<update id="merge"></update>
	
	<delete id="delete">
	
	</delete>
	
	<!-- <select id="selectForApiVO" resultType="HrdApiScoreForApiVO" parameterType="HrdApiScoreForApiVO">
			SELECT 
				A.AGENT_PK
				, ROW_NUMBER() OVER() as SEQ
				, A.USER_AGENT_PK
				, A.COURSE_AGENT_PK
				, A.CLASS_AGENT_PK
				, A.EVAL_TYPE
				, A.SUBMIT_DATE
				, A.SCORE
				, A.ACCESS_IP
				, A.SUBMIT_DUE_DT
				, A.CHANGE_STATE
				, A.IS_COPIED_ANSWER
				, A.REG_DATE
				, A.EVAL_CD
				, A.CHASI
				, A.START_END_FLAG
			FROM tb_hrd_score A
			WHERE SYNC_STATUS IN ('W', 'F')
	</select> -->
	
	<select id="selectForApi" resultType="egovMap" parameterType="hrdApiScoreVO">
			SELECT 
				 A.NUM
				, A.AGENT_PK
				, ROW_NUMBER() OVER() as SEQ
				, A.USER_AGENT_PK
				, A.COURSE_AGENT_PK
				, A.CLASS_AGENT_PK
				, A.EVAL_TYPE
				, DATE_FORMAT(A.SUBMIT_DATE, '%Y-%m-%d %H:%i:%s') AS SUBMIT_DATE
				, A.SCORE
				, A.ACCESS_IP
				, A.SUBMIT_DUE_DT
				, A.CHANGE_STATE
				, A.IS_COPIED_ANSWER
				, DATE_FORMAT(A.REG_DATE, '%Y-%m-%d %H:%i:%s') AS REG_DATE
				, A.EVAL_CD
				, A.CHASI
				, A.START_END_FLAG
			FROM tb_hrd_score A
			WHERE SYNC_STATUS != 'S'
			<if test = 'userAgentPk != null and userAgentPk != ""'>
			   AND A.USER_AGENT_PK = #{userAgentPk}
			</if>
			<if test = 'num != null and num != ""'>
			   AND A.NUM = #{num}
			</if>
			<if test = "searchKey != null and searchKey == 'syncStatus' and searchValue != null and searchValue != ''">
			   AND A.SYNC_STATUS = #{searchValue}
			</if>
			<if test = "crsCd != null and crsCd != ''">
				AND A.CRS_CD = #{crsCd}
			</if>
<!-- 			<if test = "searchFrom != null and searchFrom != '' and searchTo != null and searchTo != ''">
				AND DATE_FORMAT(A.REG_DTTM , '%Y%m%d') BETWEEN DATE_FORMAT(#{searchFrom} , '%Y%m%d') AND DATE_FORMAT(#{searchTo} , '%Y%m%d')
			</if> -->
	</select>

	<select id="selectScore" parameterType="hrdApiScoreVO" resultType="egovMap">
		<include refid="selectQuery"/>
		<include refid="fromQuery"/>
		<include refid="whereQuery"/>
	</select>
	
	<select id="listScore" parameterType="hrdApiScoreVO" resultType="egovMap">
		<include refid="listQuery"/>
		<include refid="listOrderQuery"/>
	</select>
	
	<select id="listPagingScore" parameterType="hrdApiScoreVO" resultType="egovMap">
		<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pagePrefix"/>
		<include refid="listQuery"/>
		<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pageRnumfix"/>
		<include refid="listPagingOrderQuery"/>
		<include refid="egovframework.edutrack.comm.service.impl.CommonMapper.pageSubfix"/>
	</select>
	
	<select id="countListPageingScore">
		SELECT COUNT(*)
		<include refid="fromQuery"/>
		<include refid="whereQuery"/>
	</select>
	
	<select id="selectScoreExam" resultType="hrdApiScoreVO" parameterType="ExamStareVO">
		select 	
				<!-- API 전송용  -->
				A.USER_NO AS USER_AGENT_PK
				, E.SBJ_CD AS COURSE_AGENT_PK
				, A.CRS_CRE_CD AS CLASS_AGENT_PK
				, C.TOT_GET_SCORE AS SCORE
				, (SELECT COUNT(1) FROM tb_lec_exam
					WHERE CRS_CRE_CD = D.CRS_CRE_CD
					AND SEMI_EXAM_YN = D.SEMI_EXAM_YN
					AND REG_YN = 'Y') AS creEvalCnt
				, (SELECT CASE WHEN D.SEMI_EXAM_YN = 'Y' then SEMI_EXAM_RATIO
							ELSE EXAM_RATIO
							END ) AS evalRatio
				, (	SELECT EVAL_TYPE 
					FROM tb_hrd_score 
					WHERE CRS_CRE_CD = A.CRS_CRE_CD 
						AND EVAL_CD = (case when D.SEMI_EXAM_YN = 'Y' then '04'
										else '02' 
										END)  
						AND EVAL_TYPE_CD = C.EXAM_SN 
						LIMIT 1
					) AS EVAL_TYPE  <!-- 개설 과정의 같은 시험 EVAL_TYPE  -->
				, ( SELECT max(CAST(SUBSTRING_INDEX(EVAL_TYPE, '_',-1) AS unsigned))
					FROM tb_hrd_score 
					WHERE CRS_CRE_CD = A.CRS_CRE_CD 
						AND EVAL_CD = (case when D.SEMI_EXAM_YN = 'Y' then '04'
										else '02' 
										END)
					) AS OLD_MAX_EVAL_TYPE <!-- 개설 과정의 EVAL_TYPE MAX 값(EVAL_TYPE이 없는 경우 EVAL_TYPE 세팅을 위함)  -->
				<if test='startFlagYn == "Y"'>
				<!-- , C.START_DTTM AS SUBMIT_DATE -->
				</if>
				<if test='startFlagYn != "Y"'>
				<!-- , C.END_DTTM AS SUBMIT_DATE -->
				</if>
				, B.EXAM_SCORE AS SCORE
				, C.REG_IP AS ACCESS_IP
				, case when D.SEMI_EXAM_YN = 'Y' then '04'
							else '02' 
							END AS EVAL_CD
				<!-- , C.STARE_CNT AS CHASI -->
				, (	SELECT CHASI 
					FROM tb_hrd_score 
					WHERE CRS_CRE_CD = A.CRS_CRE_CD 
						AND EVAL_CD = (case when D.SEMI_EXAM_YN = 'Y' then '04'
										else '02' 
										END) 
						and EVAL_TYPE_CD = C.EXAM_SN 
						LIMIT 1
						) as CHASI			
				<!-- LMS LOG 저장 용  -->
				, E.CRS_CD AS CRS_CD
				, A.CRS_CRE_CD AS CRS_CRE_CD
				, C.EXAM_SN AS EVAL_TYPE_CD
				, A.STD_NO AS STD_NO
		from tb_std_std A, tb_std_edu_rslt B, tb_lec_exam_stare C, tb_lec_exam D, tb_crs_cre_crs E
		where A.STD_NO = B.STD_NO
		and B.STD_NO = C.STD_NO
		and C.EXAM_SN = D.EXAM_SN 
		AND C.CRS_CRE_CD = D.CRS_CRE_CD
		and A.CRS_CRE_CD = E.CRS_CRE_CD 
		AND A.STD_NO = #{stdNo}
		AND A.CRS_CRE_CD = #{crsCreCd}
		AND C.EXAM_SN = #{examSn}
	</select>
	
	<select id="selectScoreAsmt" resultType="hrdApiScoreVO" parameterType="AssignmentSendVO">
		select A.USER_NO AS USER_AGENT_PK
				, C.SBJ_CD AS COURSE_AGENT_PK
				, A.CRS_CRE_CD AS CLASS_AGENT_PK
				, D.SCORE AS SCORE
				, (SELECT COUNT(1) FROM tb_lec_asmt
					WHERE CRS_CRE_CD = E.CRS_CRE_CD
						AND REG_YN = 'Y') AS creEvalCnt
				, C.ASMT_RATIO AS evalRatio
				, (	SELECT EVAL_TYPE 
					FROM tb_hrd_score 
					WHERE CRS_CRE_CD = A.CRS_CRE_CD 
						AND EVAL_CD = '03'
						and EVAL_TYPE_CD = D.ASMT_SN 
						LIMIT 1
						) as EVAL_TYPE		
				, ( SELECT max(CAST(SUBSTRING_INDEX(EVAL_TYPE, '_',-1) AS unsigned))
					FROM tb_hrd_score 
					WHERE CRS_CRE_CD = A.CRS_CRE_CD 
						AND EVAL_CD = '03'
					) AS OLD_MAX_EVAL_TYPE
				<if test='startFlagYn == "Y"'>
				<!-- , D.REG_DTTM AS SUBMIT_DATE -->
				</if>
				<if test='startFlagYn != "Y"'>
				<!-- , D.MOD_DTTM AS SUBMIT_DATE -->
				</if>
				<!-- , C.REG_IP AS ACCESS_IP -->
				<!-- , D.SEND_CNT AS CHASI -->
				, (	SELECT CHASI 
					FROM tb_hrd_score 
					WHERE CRS_CRE_CD = A.CRS_CRE_CD 
						AND EVAL_CD = '03'
						and EVAL_TYPE_CD = D.ASMT_SN
						LIMIT 1
						) as CHASI			
				, C.CRS_CD AS CRS_CD
				, '03' AS EVAL_CD
				, A.CRS_CRE_CD AS CRS_CRE_CD
				, D.ASMT_SN AS EVAL_TYPE_CD
				, A.STD_NO AS STD_NO
		from tb_std_std A, tb_std_edu_rslt B, tb_crs_cre_crs C, tb_lec_asmt_send D, tb_lec_asmt E
		where A.STD_NO = B.STD_NO
		and A.CRS_CRE_CD = C.CRS_CRE_CD 
		and C.CRS_CRE_CD = D.CRS_CRE_CD 
		and A.STD_NO = D.STD_NO 
		and D.ASMT_SN = E.ASMT_SN 
		and D.STD_NO = #{stdNo}
		and D.CRS_CRE_CD = #{crsCreCd}
		and D.ASMT_SN = #{asmtSn}
	</select>
	
	<select id="selectScoreBookmark" resultType="hrdApiScoreVO" parameterType="BookmarkVO">
		select A.USER_NO AS USER_AGENT_PK
				, F.SBJ_CD AS COURSE_AGENT_PK
				, A.CRS_CRE_CD AS CLASS_AGENT_PK
				, B.PRGR_RATE as SCORE
				, (	SELECT EVAL_TYPE 
					FROM tb_hrd_score 
					WHERE CRS_CRE_CD = A.CRS_CRE_CD 
						AND EVAL_CD = '01'
						and EVAL_TYPE_CD = D.UNIT_CD 
						LIMIT 1
						) as EVAL_TYPE
				, (	SELECT CHASI 
					FROM tb_hrd_score 
					WHERE CRS_CRE_CD = A.CRS_CRE_CD 
						AND EVAL_CD = '01'
						and EVAL_TYPE_CD = D.UNIT_CD 
						LIMIT 1
						) as CHASI				 
				, ( SELECT max(CAST(SUBSTRING_INDEX(EVAL_TYPE, '_',-1) AS unsigned))
					FROM tb_hrd_score 
					WHERE CRS_CRE_CD = A.CRS_CRE_CD 
						AND EVAL_CD = '01'
					) AS OLD_MAX_EVAL_TYPE				
				, C.CRS_CD AS CRS_CD
				, '01' AS EVAL_CD
				, A.CRS_CRE_CD AS CRS_CRE_CD
				, D.UNIT_CD AS EVAL_TYPE_CD
				, A.STD_NO AS STD_NO
				, C.ENRL_END_DTTM AS TERM_END_DTTM
		from tb_std_std A, tb_std_edu_rslt B, tb_crs_cre_crs C, tb_lec_bookmark D, tb_crs_crs E, tb_crs_cre_crs_onln_sbj F
		where A.STD_NO = B.STD_NO
		and A.CRS_CRE_CD = C.CRS_CRE_CD 
		and C.CRS_CD = E.CRS_CD
		and A.STD_NO = D.STD_NO 
		and C.CRS_CRE_CD = F.CRS_CRE_CD 
		and D.SBJ_CD = F.SBJ_CD 
		and D.STD_NO = #{stdNo}
		and D.SBJ_CD = #{sbjCd}
		and D.UNIT_CD = #{unitCd}
	</select> 
	
	<select id="selectScoreOneRecent" resultType="hrdApiScoreVO" parameterType="hrdApiScoreVO">
		SELECT	A.NUM
				,A.AGENT_PK
				,A.SEQ
				,A.USER_AGENT_PK
				,A.COURSE_AGENT_PK
				,A.CLASS_AGENT_PK
				,A.EVAL_TYPE
				,A.SUBMIT_DATE
				,A.SCORE
				,A.ACCESS_IP
				,A.SUBMIT_DUE_DT
				,A.CHANGE_STATE
				,A.IS_COPIED_ANSWER
				,A.REG_DATE
				,A.EVAL_CD
				,A.CHASI
				,A.START_END_FLAG
				,A.CRS_CD
				,A.CRS_YEAR
				,A.CRS_TERM
				,A.CRS_CRE_CD
				,A.EVAL_TYPE_CD
				,A.LMS_FLAG
				,A.STD_NO
		from tb_hrd_score A
		where A.STD_NO = #{stdNo}
		and A.EVAL_CD = #{evalCd}
		and A.EVAL_TYPE_CD = #{evalTypeCd}
		<if test="startEndFlag != null and startEndFlag != ''">
			and A.START_END_FLAG = #{startEndFlag}
		</if>
		and A.CHANGE_STATE != 'D'
		order by NUM desc 
		limit 1
	</select>
		
</mapper>