<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.edutrack.modules.lecture.exam.service.impl.ExamQstnMapper">
	<select id="selectKey" resultType="Integer">
		SELECT SQ_LEC_EXAM_QSTN.nextVal AS EXAM_QSTN_SN FROM DUAL
	</select>

	<sql id="selectQuery">
		SELECT A.CRS_CRE_CD  
		 	  , A.EXAM_SN  
		 	  , A.EXAM_QSTN_SN  
		      , A.QSTN_NO  
		      , A.TITLE  
		      , A.SUB_NO  
		 	  , A.QSTN_TYPE  
		      , (SELECT FN_GET_CODE_NAME('QSTN_TYPE', A.QSTN_TYPE) FROM DUAL) AS QSTN_TYPE_NM  
		 	  , A.QSTN_CTS  
		 	  , A.EMPL_1  
		 	  , A.EMPL_2  
		 	  , A.EMPL_3  
		 	  , A.EMPL_4  
		 	  , A.EMPL_5  
		 	  , A.RGT_ANSR  
		 	  , A.MULTI_RGT_ANSR  
		 	  , A.QSTN_EXPL  
		 	  , A.QSTN_SCORE  
		 	  , A.EDITOR_YN  
		 	  , A.REG_NO  
		 	  , A.REG_DTTM  
		 	  , A.MOD_NO  
		 	  , A.MOD_DTTM  
			  , (SELECT FN_GET_USER_NAME(A.MOD_NO) FROM DUAL) AS MOD_NM  
			  , (SELECT FN_GET_USER_NAME(A.REG_NO) FROM DUAL) AS REG_NM  
		      , ( SELECT COUNT(*)   
		            FROM TB_LEC_EXAM_QSTN  
		           WHERE CRS_CRE_CD 	= A.CRS_CRE_CD  
		             AND EXAM_SN 	= A.EXAM_SN  
		             AND QSTN_NO 	= A.QSTN_NO) AS QSTN_CNT  
		   FROM TB_LEC_EXAM_QSTN A  
		  WHERE A.CRS_CRE_CD 	= #{crsCreCd}  
		  	AND A.EXAM_SN 		= #{examSn}
	</sql>
	
	<select id="list" parameterType="examQuestionVO" resultType="examQuestionVO">
		<!-- 시험문제의 목록을 조회하여 반환한다.  -->
		<include refid="selectQuery" />
		AND DECODE(#{strExamQstnSn}, '', '1', null, '1', #{strExamQstnSn})  
		        LIKE  DECODE(#{strExamQstnSn},'','1',null,'1','%@#'||EXAM_QSTN_SN||'@#%')
		ORDER BY A.QSTN_NO, A.SUB_NO        
	</select>
	
	<select id="select" parameterType="examQuestionVO" resultType="examQuestionVO">
		<!--  시험문제의 단일 항목 정보를 조회하여 반환한다. -->
		<include refid="selectQuery" />
		AND  A.EXAM_QSTN_SN   = #{examQstnSn} 
	</select>
	
	<insert id="insert" parameterType="examQuestionVO">
		<!-- 시험문제 정보를 등록하고 결과를 반환한다.  -->
		INSERT  INTO TB_LEC_EXAM_QSTN (				
		        	CRS_CRE_CD							
		        ,  EXAM_SN								
		        ,  EXAM_QSTN_SN						
		        ,  QSTN_NO								
		        ,  SUB_NO								
		        ,  QSTN_TYPE							
		        ,  TITLE								
		        ,  QSTN_CTS							
		        ,  EMPL_1								
		        ,  EMPL_2								
		        ,  EMPL_3								
		        ,  EMPL_4								
		        ,  EMPL_5								
		        ,  RGT_ANSR							
		        ,  MULTI_RGT_ANSR						
		        ,  QSTN_EXPL							
		        ,  QSTN_SCORE							
		        ,  EDITOR_YN							
		        ,  REG_NO								
		        ,  REG_DTTM							
		        ,  MOD_NO								
		        ,  MOD_DTTM  )							
			SELECT  #{crsCreCd}							
		        ,  #{examSn}		
			    ,  #{examQstnSn}
		        ,  #{qstnNo}								
		        ,  NVL(MAX(SUB_NO),0) + 1				
		        ,  #{qstnType}							
		        ,  #{title}								
		        ,  ''									
		        ,  #{empl1}								
		        ,  #{empl2}								
		        ,  #{empl3}								
		        ,  #{empl4}								
		        ,  #{empl5}								
		        ,  #{rgtAnsr}							
		        ,  #{multiRgtAnsr}						
		        ,  #{qstnExpl}							
		        ,  #{qstnScore}
		        ,  #{editorYn}	
		        ,  #{regNo}								
		        ,  TO_CHAR(SYSDATE,'yyyymmddhh24miss')	
		        ,  #{modNo}								
		        ,  TO_CHAR(SYSDATE,'yyyymmddhh24miss')	
		     FROM  TB_LEC_EXAM_QSTN					
		    WHERE  CRS_CRE_CD 	= #{crsCreCd}				
		      AND  EXAM_SN 	= #{examSn}				
		      AND  QSTN_NO 	= #{qstnNo}
	</insert>
	
	<update id="update" parameterType="examQuestionVO">
		<!-- 시험문제 정보를 수정하고 결과를 반환한다. -->
		UPDATE 	TB_LEC_EXAM_QSTN										
		      SET 	QSTN_NO			= #{qstnNo}								
		        ,  SUB_NO			= #{subNo}								
		        ,  QSTN_TYPE      	= #{qstnType}								
		        ,  TITLE       	= #{title}								
		        ,  QSTN_CTS       	= #{qstnCts}								
		        ,  EMPL_1         	= #{empl1}								
		        ,  EMPL_2         	= #{empl2}
		        ,  EMPL_3         	= #{empl3}								
		        ,  EMPL_4         	= #{empl4}
		        ,  EMPL_5         	= #{empl5}
		        ,  RGT_ANSR       	= #{rgtAnsr}								
		        ,  MULTI_RGT_ANSR	= #{multiRgtAnsr}							
		        ,  QSTN_EXPL      	= #{qstnExpl}								
		        ,  QSTN_SCORE     	= #{qstnScore}
		        ,  EDITOR_YN     	= #{editorYn}								
		        ,  MOD_NO         	= #{modNo}								
		        ,  MOD_DTTM       	= TO_CHAR(SYSDATE,'yyyymmddhh24miss')	
		    WHERE  CRS_CRE_CD     	= #{crsCreCd}								
		      AND  EXAM_SN        	= #{examSn}								
		      AND  EXAM_QSTN_SN   	= #{examQstnSn}
	</update>
	
	<update id="updateScore" parameterType="examQuestionVO">
	<!-- 시험문제의 배점을 수정한다. -->
		UPDATE TB_LEC_EXAM_QSTN  
		     SET QSTN_SCORE	= #{qstnScore}  
		       , MOD_NO = #{modNo}  
		       , MOD_DTTM = TO_CHAR(SYSDATE,'yyyymmddhh24miss')  
		   WHERE CRS_CRE_CD = #{crsCreCd}  
		     AND EXAM_SN = #{examSn}  
		     AND EXAM_QSTN_SN = #{examQstnSn} 
	</update>
	
	<update id="updateBatch" parameterType="list">
	<!--  시험문제의 다중항목 정보를 변경하고 결과를 반환한다. -->
	<!--  List<ExamQuestionVO> bannerArray -->
		<foreach collection="list" item="item" index="index" open="DECLARE BEGIN" close="; END;" separator=";">
			UPDATE 	TB_LEC_EXAM_QSTN	
			SET									
		     	QSTN_NO			= #{item.qstnNo}								
		        ,  SUB_NO			= #{item.subNo}								
		        ,  QSTN_TYPE      	= #{item.qstnType}								
		        ,  TITLE       	= #{item.title}								
		        ,  QSTN_CTS       	= #{item.qstnCts}								
		        ,  EMPL_1         	= #{item.empl1}								
		        ,  EMPL_2         	= #{item.empl2}
		        ,  EMPL_3         	= #{item.empl3}								
		        ,  EMPL_4         	= #{item.empl4}								
		        ,  EMPL_5         	= #{item.empl5}								
		        ,  RGT_ANSR       	= #{item.rgtAnsr}								
		        ,  MULTI_RGT_ANSR	= #{item.multiRgtAnsr}							
		        ,  QSTN_EXPL      	= #{item.qstnExpl}								
		        ,  QSTN_SCORE     	= #{item.qstnScore}
		        ,  EDITOR_YN     	= #{item.editorYn}
		        ,  MOD_NO         	= #{item.modNo}								
		        ,  MOD_DTTM       	= TO_CHAR(SYSDATE,'yyyymmddhh24miss')	
		    WHERE  CRS_CRE_CD     	= #{item.crsCreCd}								
		      AND  EXAM_SN        	= #{item.examSn}								
		      AND  EXAM_QSTN_SN   	= #{item.examQstnSn}	
		</foreach>
	</update>
	
	<delete id="delete" parameterType="examQuestionVO">
		<!--  시험문제 정보를 삭제하고 결과를 반환한다. -->
		DELETE  FROM TB_LEC_EXAM_QSTN			
		    WHERE  CRS_CRE_CD		= #{crsCreCd}     
		      AND  EXAM_SN			= #{examSn}       
		      AND  EXAM_QSTN_SN	= #{examQstnSn}
	</delete>
	
	<delete id="deleteAll" parameterType="examVO">
		<!-- 해당 시험의 모든 시험문제를 삭제한다.  -->
		DELETE  FROM TB_LEC_EXAM_QSTN	
		    WHERE  CRS_CRE_CD	= #{crsCreCd}	
		      AND  EXAM_SN		= #{examSn}
	</delete>

	<select id="selectMaxQstnNo" parameterType="examQuestionVO" resultType="examQuestionVO">
	<!--시험문제의 MAX_QSTN_NO 값을 검색하여 결과로 반환한다. -->
		SELECT  NVL(MAX(QSTN_NO),0) AS QSTN_NO	
		     FROM  TB_LEC_EXAM_QSTN          		
		  	 WHERE  CRS_CRE_CD	= #{crsCreCd}      	
		      AND  EXAM_SN		= #{examSn}
	</select>
	
	<select id="selectExamQstnSn" resultType="examQuestionVO">
	<!-- 시험문제의 고유번호 EXAM_QSTN_SN을 검색하여 결과롤 반환한다. -->
		SELECT SQ_LEC_EXAM_QUESTION.nextVal AS EXAM_QSTN_SN FROM DUAL
	</select>
	
	<select id="selectExamQstnNo" parameterType="examQuestionVO"  resultType="examQuestionVO">
	<!-- 시험문제의 문제번호 EXAM_QSTN_NO을 검색하여 결과롤 반환한다. -->
	SELECT NVL(MAX(QSTN_NO),0) + 1 AS QSTN_NO				
		    FROM  TB_LEC_EXAM_QSTN				
		    WHERE  CRS_CRE_CD     	= #{crsCreCd}								
		      AND  EXAM_SN        	= #{examSn}
	</select>
	
	<select id="listPreview" parameterType="examQuestionVO" resultType="examQuestionVO">
	<!-- 시험 문제 목록 조회(미리보기용) -->
		SELECT  NVL(MAX(QSTN_NO),0) AS QSTN_NO	
		     FROM  TB_LEC_EXAM_QSTN          		
		  	 WHERE  CRS_CRE_CD	= #{crsCreCd}      	
		      AND  EXAM_SN		= #{examSn}
	</select>
	
	<update id="forUpdate" parameterType="examQuestionVO">
	<!-- 시험문제 내용을 forUpdate한다. -->
	UPDATE TB_LEC_EXAM_QSTN						
		   SET QSTN_CTS	= #{qstnCts}					
		   WHERE  CRS_CRE_CD 	= #{crsCreCd}				
		   AND  EXAM_SN 		= #{examSn}				
		   AND  EXAM_QSTN_SN 	= #{examQstnSn}
	</update>
	
	<update id="updateSort" parameterType="examQuestionVO">
	<!-- 시험문제 순서를 수정하고 결과를 반환한다. -->
	UPDATE 	TB_LEC_EXAM_QSTN										
		      SET 	QSTN_NO			= #{qstnNo}								
		    WHERE  CRS_CRE_CD     	= #{crsCreCd}								
		      AND  EXAM_SN        	= #{examSn}								
		      AND  EXAM_QSTN_SN   	= #{examQstnSn}	
	</update>
	
</mapper>