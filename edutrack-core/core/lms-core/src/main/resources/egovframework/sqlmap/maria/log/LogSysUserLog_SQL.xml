<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.edutrack.modules.log.sysuser.service.impl.LogSysUserLogMapper">	
	
	<select id="listCountry" parameterType="logSysUserLogVO" resultType="logSysUserLogVO">
		/*
			 SQL ID : listCountry
			 설  명 : 국가별 가입 횟수
	 	*/
	 	<![CDATA[
	        SELECT IFNULL(FN_GET_NULL(A.USER_DIV_CD), 'N/A') AS codeNm,
	         	   COUNT(A.USER_NO) AS userCnt
	          FROM tb_usr_login B
	          LEFT OUTER JOIN
	          	tb_usr_user_info A
	          ON  A.ORG_CD  = #{orgCd}
	         WHERE A.USER_NO = B.USER_NO
	           AND DATE_FORMAT(STR_TO_DATE(B.REG_DTTM, '%Y%m%d%H%i%s'), '%Y%m%d') 
	       		   BETWEEN DATE_FORMAT(STR_TO_DATE(REPLACE(#{startDt},'.',''), '%Y%m%d%H%i%s'), '%Y%m%d')
	               	   AND DATE_FORMAT(STR_TO_DATE(REPLACE(#{endDt},'.',''), '%Y%m%d%H%i%s'), '%Y%m%d')
	         GROUP BY A.USER_DIV_CD
	         ORDER BY A.USER_DIV_CD
		]]>
	</select>
	
	<select id="listSex" parameterType="logSysUserLogVO" resultType="logSysUserLogVO">
		/*
			 SQL ID : listSex
			 설  명 : 성별 가입 횟수
	 	*/
	 	<![CDATA[
			SELECT CASE WHEN A.SEX_CD = 'M' THEN 'MAN'
	               WHEN A.SEX_CD = 'F' THEN 'WOMAN'
	               ELSE 'N/A' END as codeNm,
	               COUNT(A.USER_NO) AS userCnt
	          FROM tb_usr_login B 
	          LEFT OUTER JOIN
	          	tb_usr_user_info A
	          ON (A.ORG_CD = #{orgCd})
	         WHERE A.USER_NO = B.USER_NO
	           AND DATE_FORMAT(STR_TO_DATE(B.REG_DTTM, '%Y%m%d%H%i%s'), '%Y%m%d') 
	       		   BETWEEN DATE_FORMAT(STR_TO_DATE(REPLACE(#{startDt},'.',''), '%Y%m%d%H%i%s'), '%Y%m%d')
	               	   AND DATE_FORMAT(STR_TO_DATE(REPLACE(#{endDt},'.',''), '%Y%m%d%H%i%s'), '%Y%m%d')
	         GROUP BY A.SEX_CD
	         ORDER BY A.SEX_CD
		]]>
	</select>
	
	<select id="listSns" parameterType="logSysUserLogVO" resultType="logSysUserLogVO">
		/*
			 SQL ID : listSns
			 설  명 : 소셜별 가입 횟수
	 	*/
	 	<![CDATA[
			SELECT IFNULL(FN_GET_NULL(B.SNS_DIV), 'N/A') AS codeNm,
	         	   COUNT(B.USER_NO) AS userCnt
	          FROM tb_usr_login B
	          LEFT OUTER JOIN
	          	tb_usr_user_info A
	          ON (A.ORG_CD = #{orgCd})
	         WHERE A.USER_NO = B.USER_NO
	           AND DATE_FORMAT(STR_TO_DATE(B.REG_DTTM, '%Y%m%d%H%i%s'), '%Y%m%d') 
	       		   BETWEEN DATE_FORMAT(STR_TO_DATE(REPLACE(#{startDt},'.',''), '%Y%m%d%H%i%s'), '%Y%m%d')
	               	   AND DATE_FORMAT(STR_TO_DATE(REPLACE(#{endDt},'.',''), '%Y%m%d%H%i%s'), '%Y%m%d')
	         GROUP BY B.SNS_DIV 
	         ORDER BY B.SNS_DIV
		]]>
	</select>
	
	<select id="listAge" parameterType="logSysUserLogVO" resultType="logSysUserLogVO">
		/*
			 SQL ID : listAge
			 설  명 : 연령별 가입 횟수
	 	*/
	 	<![CDATA[
	 		SELECT CASE 
		            WHEN AT.codeNm = '0' THEN '10대이하'
		            WHEN AT.codeNm = '1' THEN '10대'
		            WHEN AT.codeNm = '2' THEN '20대'
		            WHEN AT.codeNm = '3' THEN '30대'
		            WHEN AT.codeNm = '4' THEN '40대'
		            WHEN AT.codeNm = '5' THEN '50대'
		            WHEN AT.codeNm = '6' THEN '60대'
		            WHEN AT.codeNm = '7' THEN '70대'
		            WHEN AT.codeNm = '8' THEN '80대'
		            WHEN AT.codeNm = '0' THEN '90대'
		            ELSE AT.codeNm = 'N/A' END AS codeNm,
		            SUM(AT.userCnt) AS userCnt
			  FROM (SELECT SUBSTR(ABS(TIMESTAMPDIFF(MONTH,  DATE_FORMAT(NOW(), '%Y-%m-%d'), CONCAT(SUBSTR(BIRTH, 1, 4),'-',DATE_FORMAT(NOW(), '%m'),'-01'))/12),1,1) AS codeNm,
					COUNT(A.USER_NO) AS userCnt
			          FROM  tb_usr_login B
			          LEFT OUTER JOIN
			          	tb_usr_user_info A
			          ON A.ORG_CD  = #{orgCd}
			         WHERE A.USER_NO = B.USER_NO
		           AND DATE_FORMAT(STR_TO_DATE(B.REG_DTTM, '%Y%m%d%H%i%s'), '%Y%m%d') 
		               BETWEEN DATE_FORMAT(STR_TO_DATE(REPLACE(#{startDt},'.',''), '%Y%m%d%H%i%s'), '%Y%m%d')
	           	   	       AND DATE_FORMAT(STR_TO_DATE(REPLACE(#{endDt},'.',''), '%Y%m%d%H%i%s'), '%Y%m%d')
		           GROUP BY A.BIRTH
		           ORDER BY A.BIRTH DESC) AT
		      GROUP BY AT.codeNm
		      ORDER BY ( CASE 
		      			  WHEN codeNm = '10대이하' THEN 1
		      			  WHEN codeNm = '10대'	 THEN 2
		      			  WHEN codeNm = '20대'	 THEN 3
		      			  WHEN codeNm = '30대'	 THEN 4
		      			  WHEN codeNm = '40대'	 THEN 5
		      			  WHEN codeNm = '50대'	 THEN 6
		      			  WHEN codeNm = '60대'	 THEN 7
		      			  WHEN codeNm = '70대'	 THEN 8
		      			  WHEN codeNm = '80대'	 THEN 9
		      			  WHEN codeNm = '90대'	 THEN 10
		      			  ELSE 11
		      			  END)
		   
		]]>
	</select>
	
	<select id="selectAutoDate" parameterType="logSysUserLogVO" resultType="logSysUserLogVO">
		/*
			 SQL ID : selectAutoDate
			 설  명 : 날짜 가져오기
	 	*/
	 	<![CDATA[
			SELECT CASE WHEN #{dateType} = 'Day' THEN #{endDt}
			            WHEN #{dateType} = 'Week' THEN DATE_FORMAT(STR_TO_DATE(replace(#{endDt},'.',''),'%Y%m%d') - 7,'%Y.%m.%d')
			            WHEN #{dateType} = 'Month' THEN DATE_FORMAT(STR_TO_DATE(replace(#{endDt},'.',''),'%Y%m%d') - 30,'%Y.%m.%d')
			            WHEN #{dateType} = 'Year' THEN DATE_FORMAT(STR_TO_DATE(replace(#{endDt},'.',''),'%Y%m%d') - 365,'%Y.%m.%d')
			       END as startDt
			     , #{endDt} as endDt
			  FROM DUAL 
		]]>
	</select>

</mapper>
