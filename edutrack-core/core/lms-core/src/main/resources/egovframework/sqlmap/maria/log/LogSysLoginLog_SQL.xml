<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.edutrack.modules.log.login.service.impl.LogSysLoginLogMapper">	
	
	<select id="listMonth" parameterType="logSysLoginLogVO" resultType="logSysLoginLogVO">
		/*
			 SQL ID : listMonth
			 설  명 : 월별 로그인 로그 목록
	 	*/
	 	<![CDATA[
			SELECT A.CODE_NM AS codeNm
			     , IFNULL(SUM(B.LOGIN_CNT),0) AS loginCnt 
			  FROM tb_sys_code A
			  LEFT OUTER JOIN
			  	tb_log_sys_login_log B
			  ON ( B.ORG_CD  = #{orgCd} AND (CASE WHEN LENGTH(A.CODE_CD) = 1 THEN LPAD(A.CODE_CD,2,'0') ELSE A.CODE_CD END) = B.MONTH )
			 WHERE A.CODE_CTGR_CD 	= 'STAUS_MONTH'
		       AND CONCAT(YEAR,MONTH,DAY) BETWEEN replace(#{startDt},'.','') AND replace(#{endDt},'.','')
			 GROUP BY A.CODE_NM, A.CODE_ODR, B.MONTH
			 ORDER BY A.CODE_ODR
		]]>
	</select>
	
	<select id="listWeek" parameterType="logSysLoginLogVO" resultType="logSysLoginLogVO">
		/*
			 SQL ID : listWeek
			 설  명 : 주별 로그인 로그 목록
	 	*/
	 	<![CDATA[
			SELECT A.CODE_NM AS codeNm
			     , IFNULL(SUM(B.LOGIN_CNT),0) AS loginCnt
			  FROM tb_sys_code A  
			  LEFT OUTER JOIN
			       (  SELECT DAYOFWEEK(CONCAT(YEAR,'-',MONTH,'-',DAY)) AS WEEK
			               , IFNULL(FN_GET_NULL(LOGIN_CNT),0) AS LOGIN_CNT
					    FROM tb_log_sys_login_log
			           WHERE CONCAT(YEAR,MONTH,DAY) BETWEEN replace(#{startDt},'.','') AND replace(#{endDt},'.','')
			             AND IFNULL(FN_GET_NULL(ORG_CD),'1') = IFNULL(FN_GET_NULL(#{orgCd}),IFNULL(FN_GET_NULL(ORG_CD),'1'))			       
			       ) B
			   ON (A.CODE_CD = B.WEEK)
			 WHERE A.CODE_CTGR_CD = 'STATUS-WEEK'
			 GROUP BY A.CODE_NM, A.CODE_ODR, B.WEEK
			 ORDER BY A.CODE_ODR
		]]>
	</select>
	
	<select id="listDay" parameterType="logSysLoginLogVO" resultType="logSysLoginLogVO">
		/*
			 SQL ID : listDay
			 설  명 : 일별 로그인 로그 목록
	 	*/
	 	<![CDATA[
			SELECT A.CODE_NM AS codeNm
			     , IFNULL(SUM(B.LOGIN_CNT),0) AS loginCnt 
			  FROM tb_sys_code A
			  LEFT OUTER JOIN
			  	tb_log_sys_login_log B
			  ON ( A.CODE_CD = B.DAY 
			  	AND B.ORG_CD = #{orgCd})
			 WHERE A.CODE_CTGR_CD = 'STATUS_DAY'
			   AND CONCAT(YEAR,MONTH,DAY) BETWEEN replace(#{startDt},'.','') AND replace(#{endDt},'.','')
			 GROUP BY A.CODE_NM, A.CODE_ODR, B.DAY
			 ORDER BY A.CODE_ODR	 
		]]>
	</select>
	
	<select id="listHour" parameterType="logSysLoginLogVO" resultType="logSysLoginLogVO">
		/*
			 SQL ID : listHour
			 설  명 : 시간별 로그인 로그 목록
	 	*/
	 	<![CDATA[
			SELECT A.CODE_NM AS codeNm
			     , IFNULL(SUM(B.LOGIN_CNT),0) AS loginCnt
			  FROM tb_sys_code A
			  LEFT OUTER JOIN
			  	tb_log_sys_login_log B
			  ON (A.CODE_CD = B.TM AND B.ORG_CD = #{orgCd} )
			 WHERE A.CODE_CTGR_CD 	= 'STATUS-HOUR'
			   AND CONCAT(YEAR,MONTH,DAY) BETWEEN replace(#{startDt},'.','') AND replace(#{endDt},'.','')
			 GROUP BY A.CODE_NM, A.CODE_ODR, B.TM
			 ORDER BY A.CODE_ODR	 
		]]>
	</select>
	
	<select id="AllListMonth" parameterType="logSysLoginLogVO" resultType="logSysLoginLogVO">
		/*
			 SQL ID : AllListMonth
			 설  명 : 월별 모든 로그인 로그 목록
	 	*/
	 	<![CDATA[
			SELECT A.CODE_NM AS codeNm
			     , IFNULL(SUM(B.LOGIN_CNT),0) AS loginCnt
			  FROM tb_sys_code A
			  LEFT OUTER JOIN
			  	tb_log_sys_login_log B
			  ON ((CASE WHEN LENGTH(A.CODE_CD) = 1 THEN LPAD(A.CODE_CD,2,'0') ELSE A.CODE_CD END) = B.MONTH)
			 WHERE A.CODE_CTGR_CD 	= 'STAUS_MONTH'
		       AND CONCAT(YEAR,MONTH,DAY) BETWEEN replace(#{startDt},'.','') AND replace(#{endDt},'.','')
			 GROUP BY A.CODE_NM, A.CODE_ODR, B.MONTH
			 ORDER BY A.CODE_ODR
		]]>
	</select>
	
	<select id="AllListWeek" parameterType="logSysLoginLogVO" resultType="logSysLoginLogVO">
		/*
			 SQL ID : AllListWeek
			 설  명 : 주별 모든 로그인 로그 목록
	 	*/
	 	<![CDATA[
			 SELECT A.CODE_NM AS codeNm
			     , IFNULL(SUM(B.LOGIN_CNT),0) AS loginCnt
			  FROM tb_sys_code A
			  LEFT OUTER JOIN 
			       (  SELECT DATE_FORMAT(STR_TO_DATE(CONCAT(YEAR,MONTH,DAY),'%Y%m%d'),'%d') AS WEEK
			               , IFNULL(FN_GET_NULL(LOGIN_CNT),0) AS LOGIN_CNT
					    FROM tb_log_sys_login_log
			           WHERE CONCAT(YEAR,MONTH,DAY) BETWEEN replace(#{startDt},'.','') AND replace(#{endDt},'.','')
			       ) B
			   ON A.CODE_CD = B.WEEK
			 WHERE A.CODE_CTGR_CD = 'STATUS-WEEK'
			 GROUP BY A.CODE_NM, A.CODE_ODR, B.WEEK
			 ORDER BY A.CODE_ODR
		]]>
	</select>
	
	<select id="AllListDay" parameterType="logSysLoginLogVO" resultType="logSysLoginLogVO">
		/*
			 SQL ID : AllListDay
			 설  명 : 일별 모든 로그인 로그 목록
	 	*/
	 	<![CDATA[
			 SELECT A.CODE_NM AS codeNm
			     , IFNULL(SUM(B.LOGIN_CNT),0) AS loginCnt
			  FROM tb_sys_code A
			  LEFT OUTER JOIN
			  	tb_log_sys_login_log B
			  ON A.CODE_CD = B.DAY
			 WHERE A.CODE_CTGR_CD = 'STATUS_DAY'
			   AND CONCAT(YEAR,MONTH,DAY) BETWEEN replace(#{startDt},'.','') AND replace(#{endDt},'.','')
			 GROUP BY A.CODE_NM, A.CODE_ODR, B.DAY
			 ORDER BY A.CODE_ODR	 
		]]>
	</select>
	
	<select id="AllListHour" parameterType="logSysLoginLogVO" resultType="logSysLoginLogVO">
		/*
			 SQL ID : AllListHour
			 설  명 : 시간별 모든 로그인 로그 목록
	 	*/
	 	<![CDATA[
			SELECT A.CODE_NM AS codeNm
			     , IFNULL(SUM(B.LOGIN_CNT),0) AS loginCnt
			  FROM tb_sys_code A
			  LEFT OUTER JOIN
				  tb_log_sys_login_log B
			  ON A.CODE_CD = B.TM
			 WHERE A.CODE_CTGR_CD 	= 'STATUS-HOUR'
			   AND CONCAT(YEAR,MONTH,DAY) BETWEEN replace(#{startDt},'.','') AND replace(#{endDt},'.','')
			 GROUP BY A.CODE_NM, A.CODE_ODR, B.TM
			 ORDER BY A.CODE_ODR	 
		]]>
	</select>
	
	
	<select id="selectAutoDate" parameterType="logSysLoginLogVO" resultType="logSysLoginLogVO">
		/*
			 SQL ID : selectAutoDate
			 설  명 : 날짜 가져오기
	 	*/
	 	<![CDATA[
			SELECT CASE WHEN #{dateType} = 'Day' THEN #{endDt}
			            WHEN #{dateType} = 'Week' THEN DATE_ADD(STR_TO_DATE(replace(#{endDt},'.',''),'%Y%m%d'), INTERVAL - 7 day)
			            WHEN #{dateType} = 'Month' THEN DATE_ADD(STR_TO_DATE(replace(#{endDt},'.',''),'%Y%m%d'), INTERVAL -30 day)
			            WHEN #{dateType} = 'Year' THEN DATE_ADD(STR_TO_DATE(replace(#{endDt},'.',''),'%Y%m%d'), INTERVAL -365 day)
			       END as startDt
			     , #{endDt} as endDt
			  FROM DUAL 
		]]>
	</select>
	
	<select id="listHourByDay" parameterType="logSysLoginLogVO" resultType="logSysLoginLogVO">
		/*
			 SQL ID : listHourByDay
			 설  명 : 시간별 로그인 현황
	 	*/
	 	<![CDATA[
			SELECT A.CODE_NM AS codeNm
			     , IFNULL(SUM(B.LOGIN_CNT),0) AS loginCnt
			  FROM tb_sys_code A
			  LEFT OUTER JOIN
			  	tb_log_sys_login_log B
			  ON ( A.CODE_CD = B.TM AND B.ORG_CD = #{orgCd})
			 WHERE A.CODE_CTGR_CD = 'STATUS-HOUR'
			   AND CONCAT(YEAR,MONTH,DAY) = #{startDt}
			 GROUP BY A.CODE_NM, A.CODE_ODR, B.TM
			 ORDER BY A.CODE_ODR
		]]>
	</select>
	
	<select id="listDayByWeek" parameterType="logSysLoginLogVO" resultType="logSysLoginLogVO">
		/*
			 SQL ID : listDayByWeek
			 설  명 : 요일별 로그인 현황
	 	*/
	 	<![CDATA[
			SELECT A.CODE_CD AS codeNm
			     , IFNULL(SUM(B.LOGIN_CNT),0) AS loginCnt
			  FROM tb_sys_code A 
			  LEFT OUTER JOIN
			       ( SELECT DATE_FORMAT(STR_TO_DATE(CONCAT(YEAR,MONTH,DAY),'%Y%m%d'),'%d') AS WEEK
			              , IFNULL(FN_GET_NULL(LOGIN_CNT),0) AS LOGIN_CNT
					   FROM tb_log_sys_login_log
			          WHERE CONCAT(YEAR,MONTH,DAY) BETWEEN replace(#{startDt},'.','') AND replace(#{endDt},'.','')
			            AND IFNULL(FN_GET_NULL(ORG_CD),'1') = IFNULL(FN_GET_NULL(#{orgCd}),IFNULL(FN_GET_NULL(ORG_CD),'1'))
			       ) B
			  ON A.CODE_CD = B.WEEK
			 WHERE A.CODE_CTGR_CD = 'STATUS-WEEK'
			 GROUP BY A.CODE_CD, A.CODE_ODR, B.WEEK
			 ORDER BY A.CODE_ODR
		]]>
	</select>
	
	<select id="listDayByMonth" parameterType="logSysLoginLogVO" resultType="logSysLoginLogVO">
		/*
			 SQL ID : listDayByMonth
			 설  명 : 월별 로그인 현황
	 	*/
	 	<![CDATA[
			SELECT A.CODE_NM AS codeNm
			     , IFNULL(SUM(B.LOGIN_CNT),0) AS loginCnt
			  FROM tb_sys_code A
			  LEFT OUTER JOIN
			  	tb_log_sys_login_log B
			  ON (A.CODE_CD = B.DAY AND B.ORG_CD = #{orgCd} )
			 WHERE A.CODE_CTGR_CD = 'STATUS_DAY'
			   AND CONCAT(YEAR,MONTH) = #{startDt}
			 GROUP BY A.CODE_NM, A.CODE_ODR, B.DAY
			 ORDER BY A.CODE_ODR 	
		]]>
	</select>	
	
	<insert id="insert" parameterType="logSysLoginLogVO" >
		/*
			 SQL ID : insert
			 설  명 : 시스템 로그인 로그의 정보 등록
	 	*/
		INSERT INTO tb_log_sys_login_log
			(
			  ORG_CD
			, YEAR
			, MONTH
			, DAY
			, TM
			, LOGIN_CNT
			)VALUES (
			#{orgCd}
			, DATE_FORMAT(NOW(),'%Y')
			, DATE_FORMAT(NOW(),'%m')
			, DATE_FORMAT(NOW(),'%d')
			, DATE_FORMAT(NOW(),'%H')	
			, 1
			)ON DUPLICATE KEY UPDATE
			LOGIN_CNT = LOGIN_CNT + 1;
	</insert>

</mapper>
